{
   "apiKeys" : {
      "methods" : [
         {
            "docString" : "Get basic information about the selected API key, including what application it belongs to.",
            "httpMethod" : "GET",
            "methodName" : "get",
            "pathChunks" : [
               "api-keys",
               null
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {},
            "returnObjectType" : {
               "name" : "ApiKey",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The actual API key string. Use this as the consumer key when making an OAuth request.",
                     "name" : "apiKey",
                     "type" : "string"
                  },
                  {
                     "docString" : "The application that owns this API key.",
                     "name" : "owner",
                     "type" : "Application"
                  }
               ]
            }
         }
      ]
   },
   "applications" : {
      "methods" : [
         {
            "docString" : "Get basic information about the selected application.",
            "httpMethod" : "GET",
            "methodName" : "get",
            "pathChunks" : [
               "applications",
               null
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {},
            "returnObjectType" : {
               "name" : "Application",
               "parentType" : "Entity",
               "properties" : [
                  {
                     "docString" : "The name of the application as provided by its developer.",
                     "name" : "name",
                     "type" : "string"
                  },
                  {
                     "docString" : "A string containing the canonical identifier that can be used to identify this application in URLs.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Deprecated> The object types for this object. This set will contain the string C<tag:api.typepad.com,2009:Application> for an Application object.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "The keyword identifying the type of object this is. For an Application object, M<objectType> will be C<Application>.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "The URL of the OAuth request token endpoint for this application.",
                     "name" : "oauthRequestTokenUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "The URL to send the user's browser to for the user authorization step.",
                     "name" : "oauthAuthorizationUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "The URL of the OAuth access token endpoint for this application.",
                     "name" : "oauthAccessTokenUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "The URL to send the user's browser to in order to identify who is logged in (that is, the \"sign in\" link).",
                     "name" : "oauthIdentificationUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "The URL of the session sync script.",
                     "name" : "sessionSyncScriptUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "The URL to send the user's browser to in order to sign them out of TypePad.",
                     "name" : "signoutUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "The URL of a script to embed to enable the user flyouts functionality.",
                     "name" : "userFlyoutsScriptUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "A URI that serves as a globally unique identifier for the object.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of badges defined by this application.",
            "httpMethod" : "GET",
            "methodName" : "getBadges",
            "pathChunks" : [
               "applications",
               null,
               "badges"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Badge>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Badge>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of all learning badges defined by this application.",
            "httpMethod" : "GET",
            "methodName" : "getLearningBadges",
            "pathChunks" : [
               "applications",
               null,
               "badges",
               "@learning"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Badge>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Badge>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of all public badges defined by this application.",
            "httpMethod" : "GET",
            "methodName" : "getPublicBadges",
            "pathChunks" : [
               "applications",
               null,
               "badges",
               "@public"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Badge>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Badge>"
                  }
               ]
            }
         },
         {
            "docString" : "Subscribe the application to one or more external feeds.",
            "httpMethod" : "POST",
            "methodName" : "createExternalFeedSubscription",
            "paramObjectType" : {
               "properties" : [
                  {
                     "docString" : "A list of rules for filtering notifications to this subscription; each rule is a query string using the search API's syntax.",
                     "name" : "filterRules",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "The URL which will receive notifications of new content in the subscribed feeds.",
                     "name" : "callbackUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "An optional subscriber-provided opaque token that will be used to compute an HMAC digest to be sent along with each item delivered to the M<callbackUrl>.",
                     "name" : "secret",
                     "type" : "string"
                  },
                  {
                     "docString" : "A list of identifiers of the initial set of feeds to be subscribed to.",
                     "name" : "feedIdents",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "A subscriber-provided opaque token that will be echoed back in the verification request to assist the subscriber in identifying which subscription request is being verified.",
                     "name" : "verifyToken",
                     "type" : "string"
                  }
               ]
            },
            "pathChunks" : [
               "applications",
               null,
               "create-external-feed-subscription"
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "properties" : [
                  {
                     "docString" : "The subscription object that was created.",
                     "name" : "subscription",
                     "type" : "ExternalFeedSubscription"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of the application's active external feed subscriptions.",
            "httpMethod" : "GET",
            "methodName" : "getExternalFeedSubscriptions",
            "pathChunks" : [
               "applications",
               null,
               "external-feed-subscriptions"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<ExternalFeedSubscription>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<ExternalFeedSubscription>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of groups in which a client using a C<app_full> access auth token from this application can act.",
            "httpMethod" : "GET",
            "methodName" : "getGroups",
            "pathChunks" : [
               "applications",
               null,
               "groups"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Group>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Group>"
                  }
               ]
            }
         }
      ]
   },
   "assets" : {
      "methods" : [
         {
            "docString" : "Search for user-created content across the whole of TypePad.",
            "httpMethod" : "GET",
            "methodName" : "search",
            "pathChunks" : [
               "assets"
            ],
            "pathParams" : {},
            "queryParams" : {
               "filterByAssetRank" : "filter.asset-rank",
               "filterByAssetType" : "filter.asset-type",
               "filterByAuthor" : "filter.author",
               "filterByBlog" : "filter.blog",
               "filterByGroup" : "filter.group",
               "filterByOwner" : "filter.owner",
               "limit" : "max-results",
               "q" : "q",
               "sort" : "sort",
               "startToken" : "start-token"
            },
            "returnObjectType" : {
               "name" : "Stream<Asset>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole stream of which this response contains a subset. C<null> if an exact count cannot be determined.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "An estimate of the total number of items in the whole list of which this response contains a subset. C<null> if a count cannot be determined at all, or if an exact count is returned in C<totalResults>.",
                     "name" : "estimatedTotalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "An opaque token that can be used as the C<start-token> parameter of a followup request to retrieve additional results. C<null> if there are no more results to retrieve, but the presence of this token does not guarantee that the response to a followup request will actually contain results.",
                     "name" : "moreResultsToken",
                     "type" : "string"
                  },
                  {
                     "docString" : "A selection of items from the underlying stream.",
                     "name" : "entries",
                     "type" : "array<Asset>"
                  }
               ]
            }
         },
         {
            "docString" : "Delete the selected asset and its associated events, comments and favorites.",
            "httpMethod" : "DELETE",
            "methodName" : "delete",
            "pathChunks" : [
               "assets",
               null
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "name" : "Asset",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "T<Read Only> A URI that serves as a globally unique identifier for the user.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
                     "name" : "permalinkUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The short version of the URL that is this asset's permalink. This is currently available only for O<Post> assetes.",
                     "name" : "shortUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The user who created the selected asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "T<Read Only> The time at which the asset was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  },
                  {
                     "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
                     "name" : "renderedContent",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
                     "name" : "excerpt",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of strings containing the M<id> URI of the O<Group> object that this asset is mapped into, if any. This property has been superseded by the M<container> property.",
                     "name" : "groups",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
                     "name" : "source",
                     "type" : "AssetSource"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> The keyword identifying the type of asset this is.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
                     "name" : "isFavoriteForCurrentUser",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> The number of distinct users who have added this asset as a favorite.",
                     "name" : "favoriteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
                     "name" : "commentCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The title of the asset.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the asset.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the group or blog to which this asset belongs.",
                     "name" : "container",
                     "type" : "ContainerRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this asset. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> A set of identifiers for O<Account> objects to which to crosspost this asset when it's posted. This property is omitted when retrieving existing assets.",
                     "name" : "crosspostAccounts",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> C<true> if this asset is an answer to a TypePad Conversations question, or absent otherwise. This property is deprecated and will be replaced with something more useful in future.",
                     "name" : "isConversationsAnswer",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset, this property describes the original asset.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset or some other arbitrary web page, this property contains the URL of the item that was reblogged.",
                     "name" : "reblogOfUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The total number of positive votes this asset has received via the N</assets/{id}/cast-positive-vote> endpoint.",
                     "name" : "positiveVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The total number of negative votes this asset has received via the N</assets/{id}/cast-negative-vote> endpoint.",
                     "name" : "negativeVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset has the extended content. This is currently supported only for O<Post> assets that are posted within a blog.",
                     "name" : "hasExtendedContent",
                     "type" : "boolean"
                  }
               ]
            }
         },
         {
            "docString" : "Get basic information about the selected asset.",
            "httpMethod" : "GET",
            "methodName" : "get",
            "pathChunks" : [
               "assets",
               null
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {},
            "returnObjectType" : {
               "name" : "Asset",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "T<Read Only> A URI that serves as a globally unique identifier for the user.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
                     "name" : "permalinkUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The short version of the URL that is this asset's permalink. This is currently available only for O<Post> assetes.",
                     "name" : "shortUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The user who created the selected asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "T<Read Only> The time at which the asset was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  },
                  {
                     "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
                     "name" : "renderedContent",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
                     "name" : "excerpt",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of strings containing the M<id> URI of the O<Group> object that this asset is mapped into, if any. This property has been superseded by the M<container> property.",
                     "name" : "groups",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
                     "name" : "source",
                     "type" : "AssetSource"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> The keyword identifying the type of asset this is.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
                     "name" : "isFavoriteForCurrentUser",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> The number of distinct users who have added this asset as a favorite.",
                     "name" : "favoriteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
                     "name" : "commentCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The title of the asset.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the asset.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the group or blog to which this asset belongs.",
                     "name" : "container",
                     "type" : "ContainerRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this asset. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> A set of identifiers for O<Account> objects to which to crosspost this asset when it's posted. This property is omitted when retrieving existing assets.",
                     "name" : "crosspostAccounts",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> C<true> if this asset is an answer to a TypePad Conversations question, or absent otherwise. This property is deprecated and will be replaced with something more useful in future.",
                     "name" : "isConversationsAnswer",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset, this property describes the original asset.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset or some other arbitrary web page, this property contains the URL of the item that was reblogged.",
                     "name" : "reblogOfUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The total number of positive votes this asset has received via the N</assets/{id}/cast-positive-vote> endpoint.",
                     "name" : "positiveVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The total number of negative votes this asset has received via the N</assets/{id}/cast-negative-vote> endpoint.",
                     "name" : "negativeVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset has the extended content. This is currently supported only for O<Post> assets that are posted within a blog.",
                     "name" : "hasExtendedContent",
                     "type" : "boolean"
                  }
               ]
            }
         },
         {
            "docString" : "Update the selected asset.",
            "httpMethod" : "PUT",
            "methodName" : "put",
            "paramObjectType" : {
               "name" : "Asset",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "T<Read Only> A URI that serves as a globally unique identifier for the user.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
                     "name" : "permalinkUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The short version of the URL that is this asset's permalink. This is currently available only for O<Post> assetes.",
                     "name" : "shortUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The user who created the selected asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "T<Read Only> The time at which the asset was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  },
                  {
                     "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
                     "name" : "renderedContent",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
                     "name" : "excerpt",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of strings containing the M<id> URI of the O<Group> object that this asset is mapped into, if any. This property has been superseded by the M<container> property.",
                     "name" : "groups",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
                     "name" : "source",
                     "type" : "AssetSource"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> The keyword identifying the type of asset this is.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
                     "name" : "isFavoriteForCurrentUser",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> The number of distinct users who have added this asset as a favorite.",
                     "name" : "favoriteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
                     "name" : "commentCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The title of the asset.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the asset.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the group or blog to which this asset belongs.",
                     "name" : "container",
                     "type" : "ContainerRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this asset. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> A set of identifiers for O<Account> objects to which to crosspost this asset when it's posted. This property is omitted when retrieving existing assets.",
                     "name" : "crosspostAccounts",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> C<true> if this asset is an answer to a TypePad Conversations question, or absent otherwise. This property is deprecated and will be replaced with something more useful in future.",
                     "name" : "isConversationsAnswer",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset, this property describes the original asset.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset or some other arbitrary web page, this property contains the URL of the item that was reblogged.",
                     "name" : "reblogOfUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The total number of positive votes this asset has received via the N</assets/{id}/cast-positive-vote> endpoint.",
                     "name" : "positiveVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The total number of negative votes this asset has received via the N</assets/{id}/cast-negative-vote> endpoint.",
                     "name" : "negativeVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset has the extended content. This is currently supported only for O<Post> assets that are posted within a blog.",
                     "name" : "hasExtendedContent",
                     "type" : "boolean"
                  }
               ]
            },
            "pathChunks" : [
               "assets",
               null
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "name" : "Asset",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "T<Read Only> A URI that serves as a globally unique identifier for the user.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
                     "name" : "permalinkUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The short version of the URL that is this asset's permalink. This is currently available only for O<Post> assetes.",
                     "name" : "shortUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The user who created the selected asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "T<Read Only> The time at which the asset was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  },
                  {
                     "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
                     "name" : "renderedContent",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
                     "name" : "excerpt",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of strings containing the M<id> URI of the O<Group> object that this asset is mapped into, if any. This property has been superseded by the M<container> property.",
                     "name" : "groups",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
                     "name" : "source",
                     "type" : "AssetSource"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> The keyword identifying the type of asset this is.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
                     "name" : "isFavoriteForCurrentUser",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> The number of distinct users who have added this asset as a favorite.",
                     "name" : "favoriteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
                     "name" : "commentCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The title of the asset.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the asset.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the group or blog to which this asset belongs.",
                     "name" : "container",
                     "type" : "ContainerRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this asset. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> A set of identifiers for O<Account> objects to which to crosspost this asset when it's posted. This property is omitted when retrieving existing assets.",
                     "name" : "crosspostAccounts",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> C<true> if this asset is an answer to a TypePad Conversations question, or absent otherwise. This property is deprecated and will be replaced with something more useful in future.",
                     "name" : "isConversationsAnswer",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset, this property describes the original asset.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset or some other arbitrary web page, this property contains the URL of the item that was reblogged.",
                     "name" : "reblogOfUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The total number of positive votes this asset has received via the N</assets/{id}/cast-positive-vote> endpoint.",
                     "name" : "positiveVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The total number of negative votes this asset has received via the N</assets/{id}/cast-negative-vote> endpoint.",
                     "name" : "negativeVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset has the extended content. This is currently supported only for O<Post> assets that are posted within a blog.",
                     "name" : "hasExtendedContent",
                     "type" : "boolean"
                  }
               ]
            }
         },
         {
            "docString" : "Send label argument to add a category to an asset",
            "httpMethod" : "POST",
            "methodName" : "addCategory",
            "paramObjectType" : {
               "properties" : [
                  {
                     "docString" : "The category to add",
                     "name" : "category",
                     "type" : "string"
                  }
               ]
            },
            "pathChunks" : [
               "assets",
               null,
               "add-category"
            ],
            "pathParams" : {
               "id" : 1
            }
         },
         {
            "docString" : "Send a negative vote/thumbs up for an asset.",
            "httpMethod" : "POST",
            "methodName" : "castNegativeVote",
            "paramObjectType" : {
               "properties" : []
            },
            "pathChunks" : [
               "assets",
               null,
               "cast-negative-vote"
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "properties" : [
                  {
                     "docString" : "The new sum of negative votes for the asset.",
                     "name" : "negativeVoteCount",
                     "type" : "integer"
                  }
               ]
            }
         },
         {
            "docString" : "Send a positive vote/thumbs up for an asset.",
            "httpMethod" : "POST",
            "methodName" : "castPositiveVote",
            "paramObjectType" : {
               "properties" : []
            },
            "pathChunks" : [
               "assets",
               null,
               "cast-positive-vote"
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "properties" : [
                  {
                     "docString" : "The new sum of positive votes for the asset.",
                     "name" : "positiveVoteCount",
                     "type" : "integer"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of categories into which this asset has been placed within its blog. Currently supported only for O<Post> assets that are posted within a blog.",
            "httpMethod" : "GET",
            "methodName" : "getCategories",
            "pathChunks" : [
               "assets",
               null,
               "categories"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<string>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<string>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of assets that were posted in response to the selected asset and their depth in the response tree",
            "httpMethod" : "GET",
            "methodName" : "getCommentTree",
            "pathChunks" : [
               "assets",
               null,
               "comment-tree"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index",
               "selectedItem" : "selected-item"
            },
            "returnObjectType" : {
               "name" : "List<CommentTreeItem>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<CommentTreeItem>"
                  }
               ]
            }
         },
         {
            "docString" : "Create a new Comment asset as a response to the selected asset.",
            "httpMethod" : "POST",
            "methodName" : "postToComments",
            "paramObjectType" : {
               "name" : "Comment",
               "parentType" : "Asset",
               "properties" : [
                  {
                     "docString" : "T<Read Only> A reference to the asset that this comment is in reply to.",
                     "name" : "inReplyTo",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> A reference to the root asset that this comment is descended from. This will be the same as M<inReplyTo> unless this comment is a reply to another comment.",
                     "name" : "root",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this page. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> An optional, write-only flag indicating that asset creation should not trigger notification events such as emails or dashboard entries. Not available to all applications.",
                     "name" : "suppressEvents",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> A structure containing information about the author of this comment, which may be either an authenticated user or an unauthenticated user.",
                     "name" : "commenter",
                     "type" : "CommenterInfo"
                  },
                  {
                     "docString" : "T<Read Only> A URI that serves as a globally unique identifier for the user.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
                     "name" : "permalinkUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The short version of the URL that is this asset's permalink. This is currently available only for O<Post> assetes.",
                     "name" : "shortUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The user who created the selected asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "T<Read Only> The time at which the asset was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  },
                  {
                     "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
                     "name" : "renderedContent",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
                     "name" : "excerpt",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of strings containing the M<id> URI of the O<Group> object that this asset is mapped into, if any. This property has been superseded by the M<container> property.",
                     "name" : "groups",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
                     "name" : "source",
                     "type" : "AssetSource"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> The keyword identifying the type of asset this is.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
                     "name" : "isFavoriteForCurrentUser",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> The number of distinct users who have added this asset as a favorite.",
                     "name" : "favoriteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
                     "name" : "commentCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The title of the asset.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the asset.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the group or blog to which this asset belongs.",
                     "name" : "container",
                     "type" : "ContainerRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this asset. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> A set of identifiers for O<Account> objects to which to crosspost this asset when it's posted. This property is omitted when retrieving existing assets.",
                     "name" : "crosspostAccounts",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> C<true> if this asset is an answer to a TypePad Conversations question, or absent otherwise. This property is deprecated and will be replaced with something more useful in future.",
                     "name" : "isConversationsAnswer",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset, this property describes the original asset.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset or some other arbitrary web page, this property contains the URL of the item that was reblogged.",
                     "name" : "reblogOfUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The total number of positive votes this asset has received via the N</assets/{id}/cast-positive-vote> endpoint.",
                     "name" : "positiveVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The total number of negative votes this asset has received via the N</assets/{id}/cast-negative-vote> endpoint.",
                     "name" : "negativeVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset has the extended content. This is currently supported only for O<Post> assets that are posted within a blog.",
                     "name" : "hasExtendedContent",
                     "type" : "boolean"
                  }
               ]
            },
            "pathChunks" : [
               "assets",
               null,
               "comments"
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "name" : "Comment",
               "parentType" : "Asset",
               "properties" : [
                  {
                     "docString" : "T<Read Only> A reference to the asset that this comment is in reply to.",
                     "name" : "inReplyTo",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> A reference to the root asset that this comment is descended from. This will be the same as M<inReplyTo> unless this comment is a reply to another comment.",
                     "name" : "root",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this page. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> An optional, write-only flag indicating that asset creation should not trigger notification events such as emails or dashboard entries. Not available to all applications.",
                     "name" : "suppressEvents",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> A structure containing information about the author of this comment, which may be either an authenticated user or an unauthenticated user.",
                     "name" : "commenter",
                     "type" : "CommenterInfo"
                  },
                  {
                     "docString" : "T<Read Only> A URI that serves as a globally unique identifier for the user.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
                     "name" : "permalinkUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The short version of the URL that is this asset's permalink. This is currently available only for O<Post> assetes.",
                     "name" : "shortUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The user who created the selected asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "T<Read Only> The time at which the asset was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  },
                  {
                     "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
                     "name" : "renderedContent",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
                     "name" : "excerpt",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of strings containing the M<id> URI of the O<Group> object that this asset is mapped into, if any. This property has been superseded by the M<container> property.",
                     "name" : "groups",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
                     "name" : "source",
                     "type" : "AssetSource"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> The keyword identifying the type of asset this is.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
                     "name" : "isFavoriteForCurrentUser",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> The number of distinct users who have added this asset as a favorite.",
                     "name" : "favoriteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
                     "name" : "commentCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The title of the asset.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the asset.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the group or blog to which this asset belongs.",
                     "name" : "container",
                     "type" : "ContainerRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this asset. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> A set of identifiers for O<Account> objects to which to crosspost this asset when it's posted. This property is omitted when retrieving existing assets.",
                     "name" : "crosspostAccounts",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> C<true> if this asset is an answer to a TypePad Conversations question, or absent otherwise. This property is deprecated and will be replaced with something more useful in future.",
                     "name" : "isConversationsAnswer",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset, this property describes the original asset.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset or some other arbitrary web page, this property contains the URL of the item that was reblogged.",
                     "name" : "reblogOfUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The total number of positive votes this asset has received via the N</assets/{id}/cast-positive-vote> endpoint.",
                     "name" : "positiveVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The total number of negative votes this asset has received via the N</assets/{id}/cast-negative-vote> endpoint.",
                     "name" : "negativeVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset has the extended content. This is currently supported only for O<Post> assets that are posted within a blog.",
                     "name" : "hasExtendedContent",
                     "type" : "boolean"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of assets that were posted in response to the selected asset.",
            "httpMethod" : "GET",
            "methodName" : "getComments",
            "pathChunks" : [
               "assets",
               null,
               "comments"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index",
               "selectedItem" : "selected-item"
            },
            "returnObjectType" : {
               "name" : "List<Comment>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Comment>"
                  }
               ]
            }
         },
         {
            "docString" : "Get the extended content for the asset, if any. Currently supported only for O<Post> assets that are posted within a blog.",
            "httpMethod" : "GET",
            "methodName" : "getExtendedContent",
            "pathChunks" : [
               "assets",
               null,
               "extended-content"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "AssetExtendedContent",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The HTML rendered version of this asset's extended content, if it has any. Otherwise, this property is omitted.",
                     "name" : "renderedExtendedContent",
                     "type" : "string"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of favorites that have been created for the selected asset.",
            "httpMethod" : "GET",
            "methodName" : "getFavorites",
            "pathChunks" : [
               "assets",
               null,
               "favorites"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Favorite>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Favorite>"
                  }
               ]
            }
         },
         {
            "docString" : "Get the feedback status of the selected asset.",
            "httpMethod" : "GET",
            "methodName" : "getFeedbackStatus",
            "pathChunks" : [
               "assets",
               null,
               "feedback-status"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {},
            "returnObjectType" : {
               "name" : "FeedbackStatus",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "C<true> if new comments may be posted to the related asset, or C<false> if no new comments are accepted.",
                     "name" : "allowComments",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "C<true> if comments should be displayed on the related asset's permalink page, or C<false> if they should be hidden.",
                     "name" : "showComments",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "C<true> if new trackback pings may be posted to the related asset, or C<false> if no new pings are accepted.",
                     "name" : "allowTrackback",
                     "type" : "boolean"
                  }
               ]
            }
         },
         {
            "docString" : "Set the feedback status of the selected asset.",
            "httpMethod" : "PUT",
            "methodName" : "putFeedbackStatus",
            "paramObjectType" : {
               "name" : "FeedbackStatus",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "C<true> if new comments may be posted to the related asset, or C<false> if no new comments are accepted.",
                     "name" : "allowComments",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "C<true> if comments should be displayed on the related asset's permalink page, or C<false> if they should be hidden.",
                     "name" : "showComments",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "C<true> if new trackback pings may be posted to the related asset, or C<false> if no new pings are accepted.",
                     "name" : "allowTrackback",
                     "type" : "boolean"
                  }
               ]
            },
            "pathChunks" : [
               "assets",
               null,
               "feedback-status"
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "name" : "FeedbackStatus",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "C<true> if new comments may be posted to the related asset, or C<false> if no new comments are accepted.",
                     "name" : "allowComments",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "C<true> if comments should be displayed on the related asset's permalink page, or C<false> if they should be hidden.",
                     "name" : "showComments",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "C<true> if new trackback pings may be posted to the related asset, or C<false> if no new pings are accepted.",
                     "name" : "allowTrackback",
                     "type" : "boolean"
                  }
               ]
            }
         },
         {
            "docString" : "Send relevant data to get back a model of what the submitted comment will look like.",
            "httpMethod" : "POST",
            "methodName" : "makeCommentPreview",
            "paramObjectType" : {
               "properties" : [
                  {
                     "docString" : "The body of the comment.",
                     "name" : "content",
                     "type" : "string"
                  }
               ]
            },
            "pathChunks" : [
               "assets",
               null,
               "make-comment-preview"
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "properties" : [
                  {
                     "docString" : "A mockup of the future comment.",
                     "name" : "comment",
                     "type" : "Asset"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of media assets that are embedded in the content of the selected asset.",
            "httpMethod" : "GET",
            "methodName" : "getMediaAssets",
            "pathChunks" : [
               "assets",
               null,
               "media-assets"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Asset>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Asset>"
                  }
               ]
            }
         },
         {
            "docString" : "Get the publication status of the selected asset.",
            "httpMethod" : "GET",
            "methodName" : "getPublicationStatus",
            "pathChunks" : [
               "assets",
               null,
               "publication-status"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {},
            "returnObjectType" : {
               "name" : "PublicationStatus",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The time at which the related asset was (or will be) published, as a W3CDTF timestamp. If the related asset has been scheduled to be posted later, this property's timestamp will be in the future.",
                     "name" : "publicationDate",
                     "type" : "string"
                  },
                  {
                     "docString" : "C<true> if this asset is private (not yet published), or C<false> if it has been published.",
                     "name" : "draft",
                     "type" : "boolean"
                  }
               ]
            }
         },
         {
            "docString" : "Set the publication status of the selected asset.",
            "httpMethod" : "PUT",
            "methodName" : "putPublicationStatus",
            "paramObjectType" : {
               "name" : "PublicationStatus",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The time at which the related asset was (or will be) published, as a W3CDTF timestamp. If the related asset has been scheduled to be posted later, this property's timestamp will be in the future.",
                     "name" : "publicationDate",
                     "type" : "string"
                  },
                  {
                     "docString" : "C<true> if this asset is private (not yet published), or C<false> if it has been published.",
                     "name" : "draft",
                     "type" : "boolean"
                  }
               ]
            },
            "pathChunks" : [
               "assets",
               null,
               "publication-status"
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "name" : "PublicationStatus",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The time at which the related asset was (or will be) published, as a W3CDTF timestamp. If the related asset has been scheduled to be posted later, this property's timestamp will be in the future.",
                     "name" : "publicationDate",
                     "type" : "string"
                  },
                  {
                     "docString" : "C<true> if this asset is private (not yet published), or C<false> if it has been published.",
                     "name" : "draft",
                     "type" : "boolean"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of posts that were posted as reblogs of the selected asset.",
            "httpMethod" : "GET",
            "methodName" : "getReblogs",
            "pathChunks" : [
               "assets",
               null,
               "reblogs"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Post>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Post>"
                  }
               ]
            }
         },
         {
            "docString" : "Send label argument to remove a category from an asset",
            "httpMethod" : "POST",
            "methodName" : "removeCategory",
            "paramObjectType" : {
               "properties" : [
                  {
                     "docString" : "The category to remove",
                     "name" : "category",
                     "type" : "string"
                  }
               ]
            },
            "pathChunks" : [
               "assets",
               null,
               "remove-category"
            ],
            "pathParams" : {
               "id" : 1
            }
         },
         {
            "docString" : "Adjust publication status of an asset",
            "httpMethod" : "POST",
            "methodName" : "updatePublicationStatus",
            "paramObjectType" : {
               "properties" : [
                  {
                     "docString" : "A boolean indicating whether the asset is a draft",
                     "name" : "draft",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "A boolean indicating whether the asset is spam; Comment only",
                     "name" : "spam",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "The publication date of the asset",
                     "name" : "publicationDate",
                     "type" : "string"
                  }
               ]
            },
            "pathChunks" : [
               "assets",
               null,
               "update-publication-status"
            ],
            "pathParams" : {
               "id" : 1
            }
         },
         {
            "docString" : "Gets a stream of trending assets across TypePad",
            "httpMethod" : "GET",
            "methodName" : "getTrending",
            "pathChunks" : [
               "assets",
               "trending"
            ],
            "pathParams" : {},
            "queryParams" : {
               "limit" : "max-results",
               "startToken" : "start-token"
            },
            "returnObjectType" : {
               "name" : "Stream<Asset>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole stream of which this response contains a subset. C<null> if an exact count cannot be determined.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "An estimate of the total number of items in the whole list of which this response contains a subset. C<null> if a count cannot be determined at all, or if an exact count is returned in C<totalResults>.",
                     "name" : "estimatedTotalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "An opaque token that can be used as the C<start-token> parameter of a followup request to retrieve additional results. C<null> if there are no more results to retrieve, but the presence of this token does not guarantee that the response to a followup request will actually contain results.",
                     "name" : "moreResultsToken",
                     "type" : "string"
                  },
                  {
                     "docString" : "A selection of items from the underlying stream.",
                     "name" : "entries",
                     "type" : "array<Asset>"
                  }
               ]
            }
         }
      ]
   },
   "authTokens" : {
      "methods" : [
         {
            "docString" : "Get basic information about the selected auth token, including what object it grants access to.",
            "httpMethod" : "GET",
            "methodName" : "get",
            "pathChunks" : [
               "auth-tokens",
               null
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {},
            "returnObjectType" : {
               "name" : "AuthToken",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The actual auth token string. Use this as the access token when making an OAuth request.",
                     "name" : "authToken",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Deprecated> The root object to which this auth token grants access. This is a legacy field maintained for backwards compatibility with older clients, as auth tokens are no longer scoped to specific objects.",
                     "name" : "targetObject",
                     "type" : "Base"
                  }
               ]
            }
         }
      ]
   },
   "badges" : {
      "methods" : [
         {
            "docString" : "Get basic information about the selected badge.",
            "httpMethod" : "GET",
            "methodName" : "get",
            "pathChunks" : [
               "badges",
               null
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {},
            "returnObjectType" : {
               "name" : "Badge",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The canonical identifier that can be used to identify this badge in URLs.  This can be used to recognise where the same badge is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "A human-readable name for this badge.",
                     "name" : "displayName",
                     "type" : "string"
                  },
                  {
                     "docString" : "A human-readable description of what a user must do to win this badge.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "A link to the image that depicts this badge to users.",
                     "name" : "imageLink",
                     "type" : "ImageLink"
                  },
                  {
                     "docString" : "A learning badge is given for a special achievement a user accomplishes while filling out a new account. C<true> if this is a learning badge, or C<false> if this is a normal badge.",
                     "name" : "isLearning",
                     "type" : "boolean"
                  }
               ]
            }
         }
      ]
   },
   "blogs" : {
      "methods" : [
         {
            "docString" : "Get basic information about the selected blog.",
            "httpMethod" : "GET",
            "methodName" : "get",
            "pathChunks" : [
               "blogs",
               null
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {},
            "returnObjectType" : {
               "name" : "Blog",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "A URI that serves as a globally unique identifier for the object.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "The title of the blog.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The URL of the blog's home page.",
                     "name" : "homeUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "The user who owns the blog.",
                     "name" : "owner",
                     "type" : "User"
                  },
                  {
                     "docString" : "The description of the blog as provided by its owner.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Deprecated> An array of object type identifier URIs. This set will contain the string C<tag:api.typepad.com,2009:Blog> for a Blog object.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "The keyword identifying the type of object this is. For a Blog object, M<objectType> will be C<Blog>.",
                     "name" : "objectType",
                     "type" : "string"
                  }
               ]
            }
         },
         {
            "docString" : "Send label argument to remove a category from the blog",
            "httpMethod" : "POST",
            "methodName" : "addCategory",
            "paramObjectType" : {
               "properties" : [
                  {
                     "docString" : "The category to add",
                     "name" : "category",
                     "type" : "string"
                  }
               ]
            },
            "pathChunks" : [
               "blogs",
               null,
               "add-category"
            ],
            "pathParams" : {
               "id" : 1
            }
         },
         {
            "docString" : "Begin an import into the selected blog.",
            "httpMethod" : "POST",
            "methodName" : "beginImport",
            "paramObjectType" : {
               "properties" : [
                  {
                     "docString" : "Attempt to create new users based on ones found in the imported data. This is not yet supported.",
                     "name" : "matchUsers",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "Attempt to create new users based on ones found in the imported data. This is not yet supported.",
                     "name" : "createUsers",
                     "type" : "boolean"
                  }
               ]
            },
            "pathChunks" : [
               "blogs",
               null,
               "begin-import"
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "properties" : [
                  {
                     "docString" : "The O<ImporterJob> object representing the job that was created.",
                     "name" : "job",
                     "type" : "ImporterJob"
                  }
               ]
            }
         },
         {
            "docString" : "Given an array of absolute URLs, will try to return a block of HTML that embeds the content represented by those URLs as sensibly as possible.",
            "httpMethod" : "POST",
            "methodName" : "buildEmbedCodeForUrls",
            "paramObjectType" : {
               "properties" : [
                  {
                     "docString" : "An array of absolute URLs to attempt to transform.",
                     "name" : "urls",
                     "type" : "array<string>"
                  }
               ]
            },
            "pathChunks" : [
               "blogs",
               null,
               "build-embed-code-for-urls"
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "properties" : [
                  {
                     "docString" : "An HTML fragment that embeds the provided URLs. This string may contain untrustworthy HTML, so to avoid XSS vulnerabilities this should not be displayed in a sensitive context without sanitization.",
                     "name" : "embedCode",
                     "type" : "string"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of categories which are defined for the selected blog.",
            "httpMethod" : "GET",
            "methodName" : "getCategories",
            "pathChunks" : [
               "blogs",
               null,
               "categories"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<string>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<string>"
                  }
               ]
            }
         },
         {
            "docString" : "Get the commenting-related settings for this blog.",
            "httpMethod" : "GET",
            "methodName" : "getCommentingSettings",
            "pathChunks" : [
               "blogs",
               null,
               "commenting-settings"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {},
            "returnObjectType" : {
               "name" : "BlogCommentingSettings",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "C<true> if this blog allows users to sign in to comment, or C<false> if all new comments are anonymous.",
                     "name" : "signinAllowed",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "C<true> if this blog requires users to be logged in in order to leave a comment, or C<false> if anonymous comments will be rejected.",
                     "name" : "signinRequired",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "C<true> if this blog requires anonymous comments to be submitted with an email address, or C<false> otherwise.",
                     "name" : "emailAddressRequired",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "C<true> if this blog requires anonymous commenters to pass a CAPTCHA before submitting a comment, or C<false> otherwise.",
                     "name" : "captchaRequired",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "C<true> if this blog places new comments into a moderation queue for approval before they are displayed, or C<false> if new comments may be available immediately.",
                     "name" : "moderationEnabled",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "Number of days after a post is published that comments will be allowed. If the blog has no time limit for comments, this property will be omitted.",
                     "name" : "timeLimit",
                     "type" : "integer"
                  },
                  {
                     "docString" : "C<true> if this blog allows commenters to use basic HTML formatting in comments, or C<false> if HTML will be removed.",
                     "name" : "htmlAllowed",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "C<true> if comments in this blog will automatically have any bare URLs turned into links, or C<false> if URLs will be shown unlinked.",
                     "name" : "urlsAutoLinked",
                     "type" : "boolean"
                  }
               ]
            }
         },
         {
            "docString" : "Return a pageable list of published comments associated with the selected blog",
            "httpMethod" : "GET",
            "methodName" : "getPublishedComments",
            "pathChunks" : [
               "blogs",
               null,
               "comments",
               "@published"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Comment>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Comment>"
                  }
               ]
            }
         },
         {
            "docString" : "Return the fifty most recent published comments associated with the selected blog",
            "httpMethod" : "GET",
            "methodName" : "getPublishedRecentComments",
            "pathChunks" : [
               "blogs",
               null,
               "comments",
               "@published",
               "@recent"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Comment>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Comment>"
                  }
               ]
            }
         },
         {
            "docString" : "Get  a list of accounts that can be used for crossposting with this blog.",
            "httpMethod" : "GET",
            "methodName" : "getCrosspostAccounts",
            "pathChunks" : [
               "blogs",
               null,
               "crosspost-accounts"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Account>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Account>"
                  }
               ]
            }
         },
         {
            "docString" : "If the selected blog is a connected blog, create or retrieve the external post stub for the given permalink.",
            "httpMethod" : "POST",
            "methodName" : "discoverExternalPostAsset",
            "paramObjectType" : {
               "properties" : [
                  {
                     "docString" : "The URL of the page whose external post stub is being retrieved.",
                     "name" : "permalinkUrl",
                     "type" : "string"
                  }
               ]
            },
            "pathChunks" : [
               "blogs",
               null,
               "discover-external-post-asset"
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "properties" : [
                  {
                     "docString" : "The asset that acts as a stub for the given permalink.",
                     "name" : "asset",
                     "type" : "Asset"
                  }
               ]
            }
         },
         {
            "acceptedFileTypes" : [
               "*/*"
            ],
            "docString" : "Add a new media asset to the account that owns this blog.",
            "httpMethod" : "POST",
            "methodName" : "postToMediaAssets",
            "paramObjectType" : {
               "name" : "Asset",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "T<Read Only> A URI that serves as a globally unique identifier for the user.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
                     "name" : "permalinkUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The short version of the URL that is this asset's permalink. This is currently available only for O<Post> assetes.",
                     "name" : "shortUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The user who created the selected asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "T<Read Only> The time at which the asset was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  },
                  {
                     "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
                     "name" : "renderedContent",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
                     "name" : "excerpt",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of strings containing the M<id> URI of the O<Group> object that this asset is mapped into, if any. This property has been superseded by the M<container> property.",
                     "name" : "groups",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
                     "name" : "source",
                     "type" : "AssetSource"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> The keyword identifying the type of asset this is.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
                     "name" : "isFavoriteForCurrentUser",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> The number of distinct users who have added this asset as a favorite.",
                     "name" : "favoriteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
                     "name" : "commentCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The title of the asset.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the asset.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the group or blog to which this asset belongs.",
                     "name" : "container",
                     "type" : "ContainerRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this asset. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> A set of identifiers for O<Account> objects to which to crosspost this asset when it's posted. This property is omitted when retrieving existing assets.",
                     "name" : "crosspostAccounts",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> C<true> if this asset is an answer to a TypePad Conversations question, or absent otherwise. This property is deprecated and will be replaced with something more useful in future.",
                     "name" : "isConversationsAnswer",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset, this property describes the original asset.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset or some other arbitrary web page, this property contains the URL of the item that was reblogged.",
                     "name" : "reblogOfUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The total number of positive votes this asset has received via the N</assets/{id}/cast-positive-vote> endpoint.",
                     "name" : "positiveVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The total number of negative votes this asset has received via the N</assets/{id}/cast-negative-vote> endpoint.",
                     "name" : "negativeVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset has the extended content. This is currently supported only for O<Post> assets that are posted within a blog.",
                     "name" : "hasExtendedContent",
                     "type" : "boolean"
                  }
               ]
            },
            "pathChunks" : [
               "blogs",
               null,
               "media-assets"
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "name" : "Asset",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "T<Read Only> A URI that serves as a globally unique identifier for the user.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
                     "name" : "permalinkUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The short version of the URL that is this asset's permalink. This is currently available only for O<Post> assetes.",
                     "name" : "shortUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The user who created the selected asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "T<Read Only> The time at which the asset was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  },
                  {
                     "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
                     "name" : "renderedContent",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
                     "name" : "excerpt",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of strings containing the M<id> URI of the O<Group> object that this asset is mapped into, if any. This property has been superseded by the M<container> property.",
                     "name" : "groups",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
                     "name" : "source",
                     "type" : "AssetSource"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> The keyword identifying the type of asset this is.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
                     "name" : "isFavoriteForCurrentUser",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> The number of distinct users who have added this asset as a favorite.",
                     "name" : "favoriteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
                     "name" : "commentCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The title of the asset.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the asset.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the group or blog to which this asset belongs.",
                     "name" : "container",
                     "type" : "ContainerRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this asset. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> A set of identifiers for O<Account> objects to which to crosspost this asset when it's posted. This property is omitted when retrieving existing assets.",
                     "name" : "crosspostAccounts",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> C<true> if this asset is an answer to a TypePad Conversations question, or absent otherwise. This property is deprecated and will be replaced with something more useful in future.",
                     "name" : "isConversationsAnswer",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset, this property describes the original asset.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset or some other arbitrary web page, this property contains the URL of the item that was reblogged.",
                     "name" : "reblogOfUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The total number of positive votes this asset has received via the N</assets/{id}/cast-positive-vote> endpoint.",
                     "name" : "positiveVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The total number of negative votes this asset has received via the N</assets/{id}/cast-negative-vote> endpoint.",
                     "name" : "negativeVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset has the extended content. This is currently supported only for O<Post> assets that are posted within a blog.",
                     "name" : "hasExtendedContent",
                     "type" : "boolean"
                  }
               ]
            }
         },
         {
            "docString" : "Add a new page to a blog",
            "httpMethod" : "POST",
            "methodName" : "postToPageAssets",
            "paramObjectType" : {
               "name" : "Page",
               "parentType" : "Asset",
               "properties" : [
                  {
                     "docString" : "The base name of the page, used to create the M<permalinkUrl>.",
                     "name" : "filename",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A list of links to the images that are embedded within the content of this page.",
                     "name" : "embeddedImageLinks",
                     "type" : "array<ImageLink>"
                  },
                  {
                     "docString" : "The title of the page.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the page.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this page. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "An object describing the draft status and publication date for this page.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "An object describing the comment and trackback behavior for this page.",
                     "name" : "feedbackStatus",
                     "type" : "FeedbackStatus"
                  },
                  {
                     "docString" : "T<Write Only> An optional, write-only flag indicating that asset creation should not trigger notification events such as emails or dashboard entries. Not available to all applications.",
                     "name" : "suppressEvents",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> A URI that serves as a globally unique identifier for the user.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
                     "name" : "permalinkUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The short version of the URL that is this asset's permalink. This is currently available only for O<Post> assetes.",
                     "name" : "shortUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The user who created the selected asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "T<Read Only> The time at which the asset was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  },
                  {
                     "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
                     "name" : "renderedContent",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
                     "name" : "excerpt",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of strings containing the M<id> URI of the O<Group> object that this asset is mapped into, if any. This property has been superseded by the M<container> property.",
                     "name" : "groups",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
                     "name" : "source",
                     "type" : "AssetSource"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> The keyword identifying the type of asset this is.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
                     "name" : "isFavoriteForCurrentUser",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> The number of distinct users who have added this asset as a favorite.",
                     "name" : "favoriteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
                     "name" : "commentCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The title of the asset.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the asset.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the group or blog to which this asset belongs.",
                     "name" : "container",
                     "type" : "ContainerRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this asset. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> A set of identifiers for O<Account> objects to which to crosspost this asset when it's posted. This property is omitted when retrieving existing assets.",
                     "name" : "crosspostAccounts",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> C<true> if this asset is an answer to a TypePad Conversations question, or absent otherwise. This property is deprecated and will be replaced with something more useful in future.",
                     "name" : "isConversationsAnswer",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset, this property describes the original asset.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset or some other arbitrary web page, this property contains the URL of the item that was reblogged.",
                     "name" : "reblogOfUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The total number of positive votes this asset has received via the N</assets/{id}/cast-positive-vote> endpoint.",
                     "name" : "positiveVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The total number of negative votes this asset has received via the N</assets/{id}/cast-negative-vote> endpoint.",
                     "name" : "negativeVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset has the extended content. This is currently supported only for O<Post> assets that are posted within a blog.",
                     "name" : "hasExtendedContent",
                     "type" : "boolean"
                  }
               ]
            },
            "pathChunks" : [
               "blogs",
               null,
               "page-assets"
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "name" : "Page",
               "parentType" : "Asset",
               "properties" : [
                  {
                     "docString" : "The base name of the page, used to create the M<permalinkUrl>.",
                     "name" : "filename",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A list of links to the images that are embedded within the content of this page.",
                     "name" : "embeddedImageLinks",
                     "type" : "array<ImageLink>"
                  },
                  {
                     "docString" : "The title of the page.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the page.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this page. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "An object describing the draft status and publication date for this page.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "An object describing the comment and trackback behavior for this page.",
                     "name" : "feedbackStatus",
                     "type" : "FeedbackStatus"
                  },
                  {
                     "docString" : "T<Write Only> An optional, write-only flag indicating that asset creation should not trigger notification events such as emails or dashboard entries. Not available to all applications.",
                     "name" : "suppressEvents",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> A URI that serves as a globally unique identifier for the user.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
                     "name" : "permalinkUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The short version of the URL that is this asset's permalink. This is currently available only for O<Post> assetes.",
                     "name" : "shortUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The user who created the selected asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "T<Read Only> The time at which the asset was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  },
                  {
                     "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
                     "name" : "renderedContent",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
                     "name" : "excerpt",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of strings containing the M<id> URI of the O<Group> object that this asset is mapped into, if any. This property has been superseded by the M<container> property.",
                     "name" : "groups",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
                     "name" : "source",
                     "type" : "AssetSource"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> The keyword identifying the type of asset this is.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
                     "name" : "isFavoriteForCurrentUser",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> The number of distinct users who have added this asset as a favorite.",
                     "name" : "favoriteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
                     "name" : "commentCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The title of the asset.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the asset.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the group or blog to which this asset belongs.",
                     "name" : "container",
                     "type" : "ContainerRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this asset. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> A set of identifiers for O<Account> objects to which to crosspost this asset when it's posted. This property is omitted when retrieving existing assets.",
                     "name" : "crosspostAccounts",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> C<true> if this asset is an answer to a TypePad Conversations question, or absent otherwise. This property is deprecated and will be replaced with something more useful in future.",
                     "name" : "isConversationsAnswer",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset, this property describes the original asset.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset or some other arbitrary web page, this property contains the URL of the item that was reblogged.",
                     "name" : "reblogOfUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The total number of positive votes this asset has received via the N</assets/{id}/cast-positive-vote> endpoint.",
                     "name" : "positiveVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The total number of negative votes this asset has received via the N</assets/{id}/cast-negative-vote> endpoint.",
                     "name" : "negativeVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset has the extended content. This is currently supported only for O<Post> assets that are posted within a blog.",
                     "name" : "hasExtendedContent",
                     "type" : "boolean"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of pages associated with the selected blog.",
            "httpMethod" : "GET",
            "methodName" : "getPageAssets",
            "pathChunks" : [
               "blogs",
               null,
               "page-assets"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Page>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Page>"
                  }
               ]
            }
         },
         {
            "docString" : "Add a new post to a blog",
            "httpMethod" : "POST",
            "methodName" : "postToPostAssets",
            "paramObjectType" : {
               "name" : "Post",
               "parentType" : "Asset",
               "properties" : [
                  {
                     "docString" : "A list of categories associated with the post.",
                     "name" : "categories",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> A list of links to the images that are embedded within the content of this post.",
                     "name" : "embeddedImageLinks",
                     "type" : "array<ImageLink>"
                  },
                  {
                     "docString" : "T<Read Only> A list of links to the videos that are embedded within the content of this post.",
                     "name" : "embeddedVideoLinks",
                     "type" : "array<VideoLink>"
                  },
                  {
                     "docString" : "T<Read Only> A list of links to the audio streams that are embedded within the content of this post.",
                     "name" : "embeddedAudioLinks",
                     "type" : "array<AudioLink>"
                  },
                  {
                     "docString" : "The title of the post.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the post.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "The base name of the post to use when creating its M<permalinkUrl>.",
                     "name" : "filename",
                     "type" : "string"
                  },
                  {
                     "docString" : "The raw post content. The M<textFormat> property defines what format this data is in.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this post. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "An object describing the draft status and publication date for this post.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "An object describing the comment and trackback behavior for this post.",
                     "name" : "feedbackStatus",
                     "type" : "FeedbackStatus"
                  },
                  {
                     "docString" : "T<Read Only> The number of times this post has been reblogged by other people.",
                     "name" : "reblogCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Fixed After Creation> A reference to a post of which this post is a reblog.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Write Only> An optional, write-only flag indicating that asset creation should not trigger notification events such as emails or dashboard entries. Not available to all applications.",
                     "name" : "suppressEvents",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Write Only> An optional, write-only flag indicating that the asset is starting a new conversation.",
                     "name" : "createConversation",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> Identifies the O<Conversation> object this asset belongs to, if any. Omitted if the asset is not part of a conversation.",
                     "name" : "conversationId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A URI that serves as a globally unique identifier for the user.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
                     "name" : "permalinkUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The short version of the URL that is this asset's permalink. This is currently available only for O<Post> assetes.",
                     "name" : "shortUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The user who created the selected asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "T<Read Only> The time at which the asset was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  },
                  {
                     "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
                     "name" : "renderedContent",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
                     "name" : "excerpt",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of strings containing the M<id> URI of the O<Group> object that this asset is mapped into, if any. This property has been superseded by the M<container> property.",
                     "name" : "groups",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
                     "name" : "source",
                     "type" : "AssetSource"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> The keyword identifying the type of asset this is.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
                     "name" : "isFavoriteForCurrentUser",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> The number of distinct users who have added this asset as a favorite.",
                     "name" : "favoriteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
                     "name" : "commentCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The title of the asset.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the asset.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the group or blog to which this asset belongs.",
                     "name" : "container",
                     "type" : "ContainerRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this asset. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> A set of identifiers for O<Account> objects to which to crosspost this asset when it's posted. This property is omitted when retrieving existing assets.",
                     "name" : "crosspostAccounts",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> C<true> if this asset is an answer to a TypePad Conversations question, or absent otherwise. This property is deprecated and will be replaced with something more useful in future.",
                     "name" : "isConversationsAnswer",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset, this property describes the original asset.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset or some other arbitrary web page, this property contains the URL of the item that was reblogged.",
                     "name" : "reblogOfUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The total number of positive votes this asset has received via the N</assets/{id}/cast-positive-vote> endpoint.",
                     "name" : "positiveVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The total number of negative votes this asset has received via the N</assets/{id}/cast-negative-vote> endpoint.",
                     "name" : "negativeVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset has the extended content. This is currently supported only for O<Post> assets that are posted within a blog.",
                     "name" : "hasExtendedContent",
                     "type" : "boolean"
                  }
               ]
            },
            "pathChunks" : [
               "blogs",
               null,
               "post-assets"
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "name" : "Post",
               "parentType" : "Asset",
               "properties" : [
                  {
                     "docString" : "A list of categories associated with the post.",
                     "name" : "categories",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> A list of links to the images that are embedded within the content of this post.",
                     "name" : "embeddedImageLinks",
                     "type" : "array<ImageLink>"
                  },
                  {
                     "docString" : "T<Read Only> A list of links to the videos that are embedded within the content of this post.",
                     "name" : "embeddedVideoLinks",
                     "type" : "array<VideoLink>"
                  },
                  {
                     "docString" : "T<Read Only> A list of links to the audio streams that are embedded within the content of this post.",
                     "name" : "embeddedAudioLinks",
                     "type" : "array<AudioLink>"
                  },
                  {
                     "docString" : "The title of the post.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the post.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "The base name of the post to use when creating its M<permalinkUrl>.",
                     "name" : "filename",
                     "type" : "string"
                  },
                  {
                     "docString" : "The raw post content. The M<textFormat> property defines what format this data is in.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this post. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "An object describing the draft status and publication date for this post.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "An object describing the comment and trackback behavior for this post.",
                     "name" : "feedbackStatus",
                     "type" : "FeedbackStatus"
                  },
                  {
                     "docString" : "T<Read Only> The number of times this post has been reblogged by other people.",
                     "name" : "reblogCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Fixed After Creation> A reference to a post of which this post is a reblog.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Write Only> An optional, write-only flag indicating that asset creation should not trigger notification events such as emails or dashboard entries. Not available to all applications.",
                     "name" : "suppressEvents",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Write Only> An optional, write-only flag indicating that the asset is starting a new conversation.",
                     "name" : "createConversation",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> Identifies the O<Conversation> object this asset belongs to, if any. Omitted if the asset is not part of a conversation.",
                     "name" : "conversationId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A URI that serves as a globally unique identifier for the user.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
                     "name" : "permalinkUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The short version of the URL that is this asset's permalink. This is currently available only for O<Post> assetes.",
                     "name" : "shortUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The user who created the selected asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "T<Read Only> The time at which the asset was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  },
                  {
                     "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
                     "name" : "renderedContent",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
                     "name" : "excerpt",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of strings containing the M<id> URI of the O<Group> object that this asset is mapped into, if any. This property has been superseded by the M<container> property.",
                     "name" : "groups",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
                     "name" : "source",
                     "type" : "AssetSource"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> The keyword identifying the type of asset this is.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
                     "name" : "isFavoriteForCurrentUser",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> The number of distinct users who have added this asset as a favorite.",
                     "name" : "favoriteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
                     "name" : "commentCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The title of the asset.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the asset.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the group or blog to which this asset belongs.",
                     "name" : "container",
                     "type" : "ContainerRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this asset. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> A set of identifiers for O<Account> objects to which to crosspost this asset when it's posted. This property is omitted when retrieving existing assets.",
                     "name" : "crosspostAccounts",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> C<true> if this asset is an answer to a TypePad Conversations question, or absent otherwise. This property is deprecated and will be replaced with something more useful in future.",
                     "name" : "isConversationsAnswer",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset, this property describes the original asset.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset or some other arbitrary web page, this property contains the URL of the item that was reblogged.",
                     "name" : "reblogOfUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The total number of positive votes this asset has received via the N</assets/{id}/cast-positive-vote> endpoint.",
                     "name" : "positiveVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The total number of negative votes this asset has received via the N</assets/{id}/cast-negative-vote> endpoint.",
                     "name" : "negativeVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset has the extended content. This is currently supported only for O<Post> assets that are posted within a blog.",
                     "name" : "hasExtendedContent",
                     "type" : "boolean"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of posts associated with the selected blog.",
            "httpMethod" : "GET",
            "methodName" : "getPostAssets",
            "pathChunks" : [
               "blogs",
               null,
               "post-assets"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Post>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Post>"
                  }
               ]
            }
         },
         {
            "docString" : "Get all visibile posts in the selected blog that have been assigned to the given category.",
            "httpMethod" : "GET",
            "methodName" : "getPostAssetsByCategory",
            "pathChunks" : [
               "blogs",
               null,
               "post-assets",
               "@by-category",
               null
            ],
            "pathParams" : {
               "category" : 4,
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Post>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Post>"
                  }
               ]
            }
         },
         {
            "docString" : "Get zero or one posts matching the given year, month and filename.",
            "httpMethod" : "GET",
            "methodName" : "getPostAssetsByFilename",
            "pathChunks" : [
               "blogs",
               null,
               "post-assets",
               "@by-filename",
               null
            ],
            "pathParams" : {
               "filename" : 4,
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Post>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Post>"
                  }
               ]
            }
         },
         {
            "docString" : "Get all visible posts in the selected blog that have a publication date within the selected month, specified as a string of the form \"YYYY-MM\".",
            "httpMethod" : "GET",
            "methodName" : "getPostAssetsByMonth",
            "pathChunks" : [
               "blogs",
               null,
               "post-assets",
               "@by-month",
               null
            ],
            "pathParams" : {
               "id" : 1,
               "month" : 4
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Post>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Post>"
                  }
               ]
            }
         },
         {
            "docString" : "Get the published posts in the selected blog that have been assigned to the given category.",
            "httpMethod" : "GET",
            "methodName" : "getPublishedPostAssetsByCategory",
            "pathChunks" : [
               "blogs",
               null,
               "post-assets",
               "@published",
               "@by-category",
               null
            ],
            "pathParams" : {
               "category" : 5,
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Post>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Post>"
                  }
               ]
            }
         },
         {
            "docString" : "Get the posts that were published within the selected month (YYYY-MM) from the selected blog.",
            "httpMethod" : "GET",
            "methodName" : "getPublishedPostAssetsByMonth",
            "pathChunks" : [
               "blogs",
               null,
               "post-assets",
               "@published",
               "@by-month",
               null
            ],
            "pathParams" : {
               "id" : 1,
               "month" : 5
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Post>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Post>"
                  }
               ]
            }
         },
         {
            "docString" : "Get the most recent 50 published posts in the selected blog.",
            "httpMethod" : "GET",
            "methodName" : "getPublishedRecentPostAssets",
            "pathChunks" : [
               "blogs",
               null,
               "post-assets",
               "@published",
               "@recent"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Post>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Post>"
                  }
               ]
            }
         },
         {
            "docString" : "Get the most recent 50 posts in the selected blog, including draft and scheduled posts.",
            "httpMethod" : "GET",
            "methodName" : "getRecentPostAssets",
            "pathChunks" : [
               "blogs",
               null,
               "post-assets",
               "@recent"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Post>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Post>"
                  }
               ]
            }
         },
         {
            "docString" : "Get the selected user's post-by-email address",
            "httpMethod" : "GET",
            "methodName" : "getPostByEmailSettingsByUser",
            "pathChunks" : [
               "blogs",
               null,
               "post-by-email-settings",
               "@by-user",
               null
            ],
            "pathParams" : {
               "id" : 1,
               "userId" : 4
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "PostByEmailAddress",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "A private email address for posting via email.",
                     "name" : "emailAddress",
                     "type" : "string"
                  }
               ]
            }
         },
         {
            "docString" : "Send label argument to remove a category from the blog",
            "httpMethod" : "POST",
            "methodName" : "removeCategory",
            "paramObjectType" : {
               "properties" : [
                  {
                     "docString" : "The category to remove",
                     "name" : "category",
                     "type" : "string"
                  }
               ]
            },
            "pathChunks" : [
               "blogs",
               null,
               "remove-category"
            ],
            "pathParams" : {
               "id" : 1
            }
         },
         {
            "docString" : "Get data about the pageviews for the selected blog.",
            "httpMethod" : "GET",
            "methodName" : "getStats",
            "pathChunks" : [
               "blogs",
               null,
               "stats"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {},
            "returnObjectType" : {
               "name" : "BlogStats",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of page views received by the blog for all time.",
                     "name" : "totalPageViews",
                     "type" : "integer"
                  },
                  {
                     "docString" : "A map containing the daily page views on the blog for the last 120 days. The keys of the map are dates in W3CDTF format, and the values are the integer number of page views on the blog for that date.",
                     "name" : "dailyPageViews",
                     "type" : "map<integer>"
                  }
               ]
            }
         }
      ]
   },
   "conversations" : {
      "methods" : [
         {
            "docString" : "Record a response to a conversation originating from somewhere other than a TypePad blog.",
            "httpMethod" : "POST",
            "methodName" : "addExternalResponse",
            "paramObjectType" : {
               "properties" : [
                  {
                     "docString" : "The email address of the commenter if the comment is posted anonymously.",
                     "name" : "email",
                     "type" : "string"
                  },
                  {
                     "docString" : "A string describing the type of site or widget from which the response was posted.",
                     "name" : "sourceType",
                     "type" : "string"
                  },
                  {
                     "docString" : "A secret token corresponding to the responseId; required if responseId is submitted.",
                     "name" : "responseToken",
                     "type" : "string"
                  },
                  {
                     "docString" : "An optional responseId from a previous poll response.",
                     "name" : "responseId",
                     "type" : "string"
                  },
                  {
                     "docString" : "The URL of the commenter's site if the comment is posted anonymously.",
                     "name" : "href",
                     "type" : "string"
                  },
                  {
                     "docString" : "The name of the commenter if the comment is posted anonymously.",
                     "name" : "name",
                     "type" : "string"
                  },
                  {
                     "docString" : "The content of the response, as HTML.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "The id of the site on whose site the response was posted.",
                     "name" : "hostSiteId",
                     "type" : "string"
                  }
               ]
            },
            "pathChunks" : [
               "conversations",
               null,
               "add-external-response"
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "properties" : [
                  {
                     "docString" : "A ConversationResponse object representing the created response.",
                     "name" : "response",
                     "type" : "ConversationResponse"
                  }
               ]
            }
         },
         {
            "docString" : "Record a response choosing one of the polling options for this conversation.",
            "httpMethod" : "POST",
            "methodName" : "addPollResponse",
            "paramObjectType" : {
               "properties" : [
                  {
                     "docString" : "The identifier key for the option selected by the user.",
                     "name" : "identifier",
                     "type" : "string"
                  },
                  {
                     "docString" : "The id of the site from which the response was posted.",
                     "name" : "hostSiteId",
                     "type" : "string"
                  }
               ]
            },
            "pathChunks" : [
               "conversations",
               null,
               "add-poll-response"
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "properties" : [
                  {
                     "docString" : "A secret token associated with the responseId.",
                     "name" : "responseToken",
                     "type" : "string"
                  },
                  {
                     "docString" : "An identifier for the poll response.",
                     "name" : "responseId",
                     "type" : "string"
                  }
               ]
            }
         },
         {
            "docString" : "Retrieve a list of responses for the selected conversation.",
            "httpMethod" : "GET",
            "methodName" : "getResponses",
            "pathChunks" : [
               "conversations",
               null,
               "responses"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "startToken" : "start-token"
            },
            "returnObjectType" : {
               "name" : "Stream<ConversationResponse>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole stream of which this response contains a subset. C<null> if an exact count cannot be determined.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "An estimate of the total number of items in the whole list of which this response contains a subset. C<null> if a count cannot be determined at all, or if an exact count is returned in C<totalResults>.",
                     "name" : "estimatedTotalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "An opaque token that can be used as the C<start-token> parameter of a followup request to retrieve additional results. C<null> if there are no more results to retrieve, but the presence of this token does not guarantee that the response to a followup request will actually contain results.",
                     "name" : "moreResultsToken",
                     "type" : "string"
                  },
                  {
                     "docString" : "A selection of items from the underlying stream.",
                     "name" : "entries",
                     "type" : "array<ConversationResponse>"
                  }
               ]
            }
         },
         {
            "docString" : "Retrieve a list of featured responses for the selected conversation.",
            "httpMethod" : "GET",
            "methodName" : "getFeaturedResponses",
            "pathChunks" : [
               "conversations",
               null,
               "responses",
               "@featured"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "startToken" : "start-token"
            },
            "returnObjectType" : {
               "name" : "Stream<ConversationResponse>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole stream of which this response contains a subset. C<null> if an exact count cannot be determined.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "An estimate of the total number of items in the whole list of which this response contains a subset. C<null> if a count cannot be determined at all, or if an exact count is returned in C<totalResults>.",
                     "name" : "estimatedTotalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "An opaque token that can be used as the C<start-token> parameter of a followup request to retrieve additional results. C<null> if there are no more results to retrieve, but the presence of this token does not guarantee that the response to a followup request will actually contain results.",
                     "name" : "moreResultsToken",
                     "type" : "string"
                  },
                  {
                     "docString" : "A selection of items from the underlying stream.",
                     "name" : "entries",
                     "type" : "array<ConversationResponse>"
                  }
               ]
            }
         },
         {
            "docString" : "Retrieve a list of responses from invited participants for the selected conversation.",
            "httpMethod" : "GET",
            "methodName" : "getFromVoicesResponses",
            "pathChunks" : [
               "conversations",
               null,
               "responses",
               "@from-voices"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "startToken" : "start-token"
            },
            "returnObjectType" : {
               "name" : "Stream<ConversationResponse>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole stream of which this response contains a subset. C<null> if an exact count cannot be determined.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "An estimate of the total number of items in the whole list of which this response contains a subset. C<null> if a count cannot be determined at all, or if an exact count is returned in C<totalResults>.",
                     "name" : "estimatedTotalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "An opaque token that can be used as the C<start-token> parameter of a followup request to retrieve additional results. C<null> if there are no more results to retrieve, but the presence of this token does not guarantee that the response to a followup request will actually contain results.",
                     "name" : "moreResultsToken",
                     "type" : "string"
                  },
                  {
                     "docString" : "A selection of items from the underlying stream.",
                     "name" : "entries",
                     "type" : "array<ConversationResponse>"
                  }
               ]
            }
         }
      ]
   },
   "domains" : {
      "methods" : [
         {
            "docString" : "Get basic information about the selected domain.",
            "httpMethod" : "GET",
            "methodName" : "get",
            "pathChunks" : [
               "domains",
               null
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {},
            "returnObjectType" : {
               "name" : "Domain",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The domain that this object describes.",
                     "name" : "domain",
                     "type" : "string"
                  },
                  {
                     "docString" : "The user that owns this domain in TypePad.",
                     "name" : "owner",
                     "type" : "User"
                  }
               ]
            }
         },
         {
            "docString" : "Given a URI path, find the blog and asset, if any, that the path matches.",
            "httpMethod" : "POST",
            "methodName" : "resolvePath",
            "paramObjectType" : {
               "properties" : [
                  {
                     "docString" : "The URI path to resolve",
                     "name" : "path",
                     "type" : "string"
                  }
               ]
            },
            "pathChunks" : [
               "domains",
               null,
               "resolve-path"
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "properties" : [
                  {
                     "docString" : "The blog that the given URL belongs to, if any.",
                     "name" : "blog",
                     "type" : "Blog"
                  },
                  {
                     "docString" : "The asset that the given URL is for, if any.",
                     "name" : "asset",
                     "type" : "Asset"
                  },
                  {
                     "docString" : "C<true> if the given path matched a blog or asset directly, or C<false> if this is only a prefix match. If using this endpoint to implement an alternative blog renderer, a client should return 404 if this flag is not set.",
                     "name" : "isFullMatch",
                     "type" : "boolean"
                  }
               ]
            }
         }
      ]
   },
   "events" : {
      "methods" : [
         {
            "docString" : "Get basic information about the selected event.",
            "httpMethod" : "GET",
            "methodName" : "get",
            "pathChunks" : [
               "events",
               null
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {},
            "returnObjectType" : {
               "name" : "Event",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "A URI that serves as a globally unique identifier for the event.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same event is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword identifying the type of event this is.",
                     "name" : "verb",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Deprecated> An array of verb identifier URIs. This set will contain one verb identifier URI.",
                     "name" : "verbs",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "The user who performed the action described by this event.",
                     "name" : "actor",
                     "type" : "Entity"
                  },
                  {
                     "docString" : "The object to which the action described by this event was performed.",
                     "name" : "object",
                     "type" : "Base"
                  },
                  {
                     "docString" : "The time at which the event was performed, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  }
               ]
            }
         }
      ]
   },
   "externalFeedSubscriptions" : {
      "methods" : [
         {
            "docString" : "Remove the selected subscription.",
            "httpMethod" : "DELETE",
            "methodName" : "delete",
            "pathChunks" : [
               "external-feed-subscriptions",
               null
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "name" : "ExternalFeedSubscription",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "The URL to which to send notifications of new items in this subscription's feeds.",
                     "name" : "callbackUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "The HTTP status code that was returned by the last call to the subscription's callback URL.",
                     "name" : "callbackStatus",
                     "type" : "string"
                  },
                  {
                     "docString" : "A list of rules for filtering notifications to this subscription. Each rule is a full-text search query string, like those used with the N</assets> endpoint. An item will be delivered to the M<callbackUrl> if it matches any one of these query strings.",
                     "name" : "filterRules",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "For a Group-owned subscription, the urlId of the User who will own the items posted into the group by the subscription.",
                     "name" : "postAsUserId",
                     "type" : "array<string>"
                  }
               ]
            }
         },
         {
            "docString" : "Get basic information about the selected subscription.",
            "httpMethod" : "GET",
            "methodName" : "get",
            "pathChunks" : [
               "external-feed-subscriptions",
               null
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {},
            "returnObjectType" : {
               "name" : "ExternalFeedSubscription",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "The URL to which to send notifications of new items in this subscription's feeds.",
                     "name" : "callbackUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "The HTTP status code that was returned by the last call to the subscription's callback URL.",
                     "name" : "callbackStatus",
                     "type" : "string"
                  },
                  {
                     "docString" : "A list of rules for filtering notifications to this subscription. Each rule is a full-text search query string, like those used with the N</assets> endpoint. An item will be delivered to the M<callbackUrl> if it matches any one of these query strings.",
                     "name" : "filterRules",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "For a Group-owned subscription, the urlId of the User who will own the items posted into the group by the subscription.",
                     "name" : "postAsUserId",
                     "type" : "array<string>"
                  }
               ]
            }
         },
         {
            "docString" : "Add one or more feed identifiers to the subscription.",
            "httpMethod" : "POST",
            "methodName" : "addFeeds",
            "paramObjectType" : {
               "properties" : [
                  {
                     "docString" : "A list of identifiers to be added to the subscription's set of feeds.",
                     "name" : "feedIdents",
                     "type" : "array<string>"
                  }
               ]
            },
            "pathChunks" : [
               "external-feed-subscriptions",
               null,
               "add-feeds"
            ],
            "pathParams" : {
               "id" : 1
            }
         },
         {
            "docString" : "Get a list of strings containing the identifiers of the feeds to which this subscription is subscribed.",
            "httpMethod" : "GET",
            "methodName" : "getFeeds",
            "pathChunks" : [
               "external-feed-subscriptions",
               null,
               "feeds"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<string>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<string>"
                  }
               ]
            }
         },
         {
            "docString" : "Remove one or more feed identifiers from the subscription.",
            "httpMethod" : "POST",
            "methodName" : "removeFeeds",
            "paramObjectType" : {
               "properties" : [
                  {
                     "docString" : "A list of identifiers to be removed from the subscription's set of feeds.",
                     "name" : "feedIdents",
                     "type" : "array<string>"
                  }
               ]
            },
            "pathChunks" : [
               "external-feed-subscriptions",
               null,
               "remove-feeds"
            ],
            "pathParams" : {
               "id" : 1
            }
         },
         {
            "docString" : "Change the filtering rules for the subscription.",
            "httpMethod" : "POST",
            "methodName" : "updateFilters",
            "paramObjectType" : {
               "properties" : [
                  {
                     "docString" : "The new list of rules for filtering notifications to this subscription; this will replace the subscription's existing rules.",
                     "name" : "filterRules",
                     "type" : "array<string>"
                  }
               ]
            },
            "pathChunks" : [
               "external-feed-subscriptions",
               null,
               "update-filters"
            ],
            "pathParams" : {
               "id" : 1
            }
         },
         {
            "docString" : "Change the callback URL and/or secret for the subscription.",
            "httpMethod" : "POST",
            "methodName" : "updateNotificationSettings",
            "paramObjectType" : {
               "properties" : [
                  {
                     "docString" : "The new callback URL to receive notifications of new content in this subscription's feeds.",
                     "name" : "callbackUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "An optional subscriber-provided opaque token that will be used to compute an HMAC digest to be sent along with each item delivered to the M<callbackUrl>.",
                     "name" : "secret",
                     "type" : "string"
                  },
                  {
                     "docString" : "A subscriber-provided opaque token that will be echoed back in a verification request to the M<callbackUrl>. Required, if the M<callbackUrl> is being modified with this endpoint.",
                     "name" : "verifyToken",
                     "type" : "string"
                  }
               ]
            },
            "pathChunks" : [
               "external-feed-subscriptions",
               null,
               "update-notification-settings"
            ],
            "pathParams" : {
               "id" : 1
            }
         },
         {
            "docString" : "Change the \"post as\" user for a subscription owned by a group.",
            "httpMethod" : "POST",
            "methodName" : "updateUser",
            "paramObjectType" : {
               "properties" : [
                  {
                     "docString" : "The M<urlId> of the user who will own the assets and events posted into the group's stream by this subscription. The user must be an administrator of the group.",
                     "name" : "postAsUserId",
                     "type" : "string"
                  }
               ]
            },
            "pathChunks" : [
               "external-feed-subscriptions",
               null,
               "update-user"
            ],
            "pathParams" : {
               "id" : 1
            }
         }
      ]
   },
   "favorites" : {
      "methods" : [
         {
            "docString" : "Delete the selected favorite.",
            "httpMethod" : "DELETE",
            "methodName" : "delete",
            "pathChunks" : [
               "favorites",
               null
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "name" : "Favorite",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "A URI that serves as a globally unique identifier for the favorite.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "A string containing the canonical identifier that can be used to identify this favorite in URLs. This can be used to recognise where the same favorite is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "The user who saved this favorite. That is, this property is the user who saved the target asset as a favorite, not the creator of that asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "A reference to the target asset that has been marked as a favorite.",
                     "name" : "inReplyTo",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "The time that the favorite was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  }
               ]
            }
         },
         {
            "docString" : "Get basic information about the selected favorite, including its owner and the target asset.",
            "httpMethod" : "GET",
            "methodName" : "get",
            "pathChunks" : [
               "favorites",
               null
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {},
            "returnObjectType" : {
               "name" : "Favorite",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "A URI that serves as a globally unique identifier for the favorite.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "A string containing the canonical identifier that can be used to identify this favorite in URLs. This can be used to recognise where the same favorite is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "The user who saved this favorite. That is, this property is the user who saved the target asset as a favorite, not the creator of that asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "A reference to the target asset that has been marked as a favorite.",
                     "name" : "inReplyTo",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "The time that the favorite was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  }
               ]
            }
         }
      ]
   },
   "groups" : {
      "methods" : [
         {
            "docString" : "Get basic information about the selected group.",
            "httpMethod" : "GET",
            "methodName" : "get",
            "pathChunks" : [
               "groups",
               null
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {},
            "returnObjectType" : {
               "name" : "Group",
               "parentType" : "Entity",
               "properties" : [
                  {
                     "docString" : "The display name set by the group's owner.",
                     "name" : "displayName",
                     "type" : "string"
                  },
                  {
                     "docString" : "A tagline describing the group, as set by the group's owner.",
                     "name" : "tagline",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Deprecated> An array of object type identifier URIs.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "A keyword describing the type of this object. For a group object, M<objectType> will be C<Group>.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "A link to an image representing this group.",
                     "name" : "avatarLink",
                     "type" : "ImageLink"
                  },
                  {
                     "docString" : "The URL to the front page of the group website.",
                     "name" : "siteUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "A URI that serves as a globally unique identifier for the object.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  }
               ]
            }
         },
         {
            "docString" : "Add a given user as a member of the selected group.",
            "httpMethod" : "POST",
            "methodName" : "addMember",
            "paramObjectType" : {
               "properties" : [
                  {
                     "docString" : "The M<urlId> of the user who is being added.",
                     "name" : "userId",
                     "type" : "string"
                  }
               ]
            },
            "pathChunks" : [
               "groups",
               null,
               "add-member"
            ],
            "pathParams" : {
               "id" : 1
            }
         },
         {
            "acceptedFileTypes" : [
               "audio/mp3",
               "audio/mp4",
               "audio/m4a",
               "audio/mpeg",
               "audio/amr",
               "audio/x-wav",
               "application/ogg"
            ],
            "docString" : "Create a new Audio asset within the selected group.",
            "httpMethod" : "POST",
            "methodName" : "postToAudioAssets",
            "paramObjectType" : {
               "name" : "Audio",
               "parentType" : "Asset",
               "properties" : [
                  {
                     "docString" : "T<Read Only> A link to the audio stream that is this Audio asset's content.",
                     "name" : "audioLink",
                     "type" : "AudioLink"
                  },
                  {
                     "docString" : "T<Write Only> An optional, write-only flag indicating that asset creation should not trigger notification events such as emails or dashboard entries. Not available to all applications.",
                     "name" : "suppressEvents",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> A URI that serves as a globally unique identifier for the user.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
                     "name" : "permalinkUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The short version of the URL that is this asset's permalink. This is currently available only for O<Post> assetes.",
                     "name" : "shortUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The user who created the selected asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "T<Read Only> The time at which the asset was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  },
                  {
                     "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
                     "name" : "renderedContent",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
                     "name" : "excerpt",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of strings containing the M<id> URI of the O<Group> object that this asset is mapped into, if any. This property has been superseded by the M<container> property.",
                     "name" : "groups",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
                     "name" : "source",
                     "type" : "AssetSource"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> The keyword identifying the type of asset this is.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
                     "name" : "isFavoriteForCurrentUser",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> The number of distinct users who have added this asset as a favorite.",
                     "name" : "favoriteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
                     "name" : "commentCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The title of the asset.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the asset.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the group or blog to which this asset belongs.",
                     "name" : "container",
                     "type" : "ContainerRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this asset. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> A set of identifiers for O<Account> objects to which to crosspost this asset when it's posted. This property is omitted when retrieving existing assets.",
                     "name" : "crosspostAccounts",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> C<true> if this asset is an answer to a TypePad Conversations question, or absent otherwise. This property is deprecated and will be replaced with something more useful in future.",
                     "name" : "isConversationsAnswer",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset, this property describes the original asset.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset or some other arbitrary web page, this property contains the URL of the item that was reblogged.",
                     "name" : "reblogOfUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The total number of positive votes this asset has received via the N</assets/{id}/cast-positive-vote> endpoint.",
                     "name" : "positiveVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The total number of negative votes this asset has received via the N</assets/{id}/cast-negative-vote> endpoint.",
                     "name" : "negativeVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset has the extended content. This is currently supported only for O<Post> assets that are posted within a blog.",
                     "name" : "hasExtendedContent",
                     "type" : "boolean"
                  }
               ]
            },
            "pathChunks" : [
               "groups",
               null,
               "audio-assets"
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "name" : "Audio",
               "parentType" : "Asset",
               "properties" : [
                  {
                     "docString" : "T<Read Only> A link to the audio stream that is this Audio asset's content.",
                     "name" : "audioLink",
                     "type" : "AudioLink"
                  },
                  {
                     "docString" : "T<Write Only> An optional, write-only flag indicating that asset creation should not trigger notification events such as emails or dashboard entries. Not available to all applications.",
                     "name" : "suppressEvents",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> A URI that serves as a globally unique identifier for the user.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
                     "name" : "permalinkUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The short version of the URL that is this asset's permalink. This is currently available only for O<Post> assetes.",
                     "name" : "shortUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The user who created the selected asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "T<Read Only> The time at which the asset was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  },
                  {
                     "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
                     "name" : "renderedContent",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
                     "name" : "excerpt",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of strings containing the M<id> URI of the O<Group> object that this asset is mapped into, if any. This property has been superseded by the M<container> property.",
                     "name" : "groups",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
                     "name" : "source",
                     "type" : "AssetSource"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> The keyword identifying the type of asset this is.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
                     "name" : "isFavoriteForCurrentUser",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> The number of distinct users who have added this asset as a favorite.",
                     "name" : "favoriteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
                     "name" : "commentCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The title of the asset.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the asset.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the group or blog to which this asset belongs.",
                     "name" : "container",
                     "type" : "ContainerRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this asset. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> A set of identifiers for O<Account> objects to which to crosspost this asset when it's posted. This property is omitted when retrieving existing assets.",
                     "name" : "crosspostAccounts",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> C<true> if this asset is an answer to a TypePad Conversations question, or absent otherwise. This property is deprecated and will be replaced with something more useful in future.",
                     "name" : "isConversationsAnswer",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset, this property describes the original asset.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset or some other arbitrary web page, this property contains the URL of the item that was reblogged.",
                     "name" : "reblogOfUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The total number of positive votes this asset has received via the N</assets/{id}/cast-positive-vote> endpoint.",
                     "name" : "positiveVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The total number of negative votes this asset has received via the N</assets/{id}/cast-negative-vote> endpoint.",
                     "name" : "negativeVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset has the extended content. This is currently supported only for O<Post> assets that are posted within a blog.",
                     "name" : "hasExtendedContent",
                     "type" : "boolean"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of recently created Audio assets from the selected group.",
            "httpMethod" : "GET",
            "methodName" : "getAudioAssets",
            "pathChunks" : [
               "groups",
               null,
               "audio-assets"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Audio>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Audio>"
                  }
               ]
            }
         },
         {
            "docString" : "Block the given user from joining the selected group, removing that user as a member in the process.",
            "httpMethod" : "POST",
            "methodName" : "blockUser",
            "paramObjectType" : {
               "properties" : [
                  {
                     "docString" : "The M<urlId> of the user who is being blocked.",
                     "name" : "userId",
                     "type" : "string"
                  }
               ]
            },
            "pathChunks" : [
               "groups",
               null,
               "block-user"
            ],
            "pathParams" : {
               "id" : 1
            }
         },
         {
            "docString" : "Subscribe the group to one or more external feeds.",
            "httpMethod" : "POST",
            "methodName" : "createExternalFeedSubscription",
            "paramObjectType" : {
               "properties" : [
                  {
                     "docString" : "A list of rules for filtering notifications to this subscription; each rule is a query string using the search API's syntax.",
                     "name" : "filterRules",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "The M<urlId> of the user who will own the assets and events posted into the group's stream by this subscription. The user must be an administrator of the group.",
                     "name" : "postAsUserId",
                     "type" : "string"
                  },
                  {
                     "docString" : "A list of identifiers of the initial set of feeds to be subscribed to.",
                     "name" : "feedIdents",
                     "type" : "array<string>"
                  }
               ]
            },
            "pathChunks" : [
               "groups",
               null,
               "create-external-feed-subscription"
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "properties" : [
                  {
                     "docString" : "The subscription object that was created.",
                     "name" : "subscription",
                     "type" : "ExternalFeedSubscription"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of events describing actions performed in the selected group.",
            "httpMethod" : "GET",
            "methodName" : "getEvents",
            "pathChunks" : [
               "groups",
               null,
               "events"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Event>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Event>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of the group's active external feed subscriptions.",
            "httpMethod" : "GET",
            "methodName" : "getExternalFeedSubscriptions",
            "pathChunks" : [
               "groups",
               null,
               "external-feed-subscriptions"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<ExternalFeedSubscription>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<ExternalFeedSubscription>"
                  }
               ]
            }
         },
         {
            "docString" : "Create a new Link asset within the selected group.",
            "httpMethod" : "POST",
            "methodName" : "postToLinkAssets",
            "paramObjectType" : {
               "name" : "Link",
               "parentType" : "Asset",
               "properties" : [
                  {
                     "docString" : "The URL that is the target of this link.",
                     "name" : "targetUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Write Only> An optional, write-only flag indicating that asset creation should not trigger notification events such as emails or dashboard entries. Not available to all applications.",
                     "name" : "suppressEvents",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> A URI that serves as a globally unique identifier for the user.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
                     "name" : "permalinkUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The short version of the URL that is this asset's permalink. This is currently available only for O<Post> assetes.",
                     "name" : "shortUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The user who created the selected asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "T<Read Only> The time at which the asset was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  },
                  {
                     "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
                     "name" : "renderedContent",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
                     "name" : "excerpt",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of strings containing the M<id> URI of the O<Group> object that this asset is mapped into, if any. This property has been superseded by the M<container> property.",
                     "name" : "groups",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
                     "name" : "source",
                     "type" : "AssetSource"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> The keyword identifying the type of asset this is.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
                     "name" : "isFavoriteForCurrentUser",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> The number of distinct users who have added this asset as a favorite.",
                     "name" : "favoriteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
                     "name" : "commentCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The title of the asset.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the asset.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the group or blog to which this asset belongs.",
                     "name" : "container",
                     "type" : "ContainerRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this asset. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> A set of identifiers for O<Account> objects to which to crosspost this asset when it's posted. This property is omitted when retrieving existing assets.",
                     "name" : "crosspostAccounts",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> C<true> if this asset is an answer to a TypePad Conversations question, or absent otherwise. This property is deprecated and will be replaced with something more useful in future.",
                     "name" : "isConversationsAnswer",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset, this property describes the original asset.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset or some other arbitrary web page, this property contains the URL of the item that was reblogged.",
                     "name" : "reblogOfUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The total number of positive votes this asset has received via the N</assets/{id}/cast-positive-vote> endpoint.",
                     "name" : "positiveVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The total number of negative votes this asset has received via the N</assets/{id}/cast-negative-vote> endpoint.",
                     "name" : "negativeVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset has the extended content. This is currently supported only for O<Post> assets that are posted within a blog.",
                     "name" : "hasExtendedContent",
                     "type" : "boolean"
                  }
               ]
            },
            "pathChunks" : [
               "groups",
               null,
               "link-assets"
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "name" : "Link",
               "parentType" : "Asset",
               "properties" : [
                  {
                     "docString" : "The URL that is the target of this link.",
                     "name" : "targetUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Write Only> An optional, write-only flag indicating that asset creation should not trigger notification events such as emails or dashboard entries. Not available to all applications.",
                     "name" : "suppressEvents",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> A URI that serves as a globally unique identifier for the user.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
                     "name" : "permalinkUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The short version of the URL that is this asset's permalink. This is currently available only for O<Post> assetes.",
                     "name" : "shortUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The user who created the selected asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "T<Read Only> The time at which the asset was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  },
                  {
                     "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
                     "name" : "renderedContent",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
                     "name" : "excerpt",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of strings containing the M<id> URI of the O<Group> object that this asset is mapped into, if any. This property has been superseded by the M<container> property.",
                     "name" : "groups",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
                     "name" : "source",
                     "type" : "AssetSource"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> The keyword identifying the type of asset this is.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
                     "name" : "isFavoriteForCurrentUser",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> The number of distinct users who have added this asset as a favorite.",
                     "name" : "favoriteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
                     "name" : "commentCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The title of the asset.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the asset.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the group or blog to which this asset belongs.",
                     "name" : "container",
                     "type" : "ContainerRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this asset. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> A set of identifiers for O<Account> objects to which to crosspost this asset when it's posted. This property is omitted when retrieving existing assets.",
                     "name" : "crosspostAccounts",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> C<true> if this asset is an answer to a TypePad Conversations question, or absent otherwise. This property is deprecated and will be replaced with something more useful in future.",
                     "name" : "isConversationsAnswer",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset, this property describes the original asset.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset or some other arbitrary web page, this property contains the URL of the item that was reblogged.",
                     "name" : "reblogOfUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The total number of positive votes this asset has received via the N</assets/{id}/cast-positive-vote> endpoint.",
                     "name" : "positiveVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The total number of negative votes this asset has received via the N</assets/{id}/cast-negative-vote> endpoint.",
                     "name" : "negativeVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset has the extended content. This is currently supported only for O<Post> assets that are posted within a blog.",
                     "name" : "hasExtendedContent",
                     "type" : "boolean"
                  }
               ]
            }
         },
         {
            "docString" : "Returns a list of recently created Link assets from the selected group.",
            "httpMethod" : "GET",
            "methodName" : "getLinkAssets",
            "pathChunks" : [
               "groups",
               null,
               "link-assets"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Link>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Link>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of relationships between users and the selected group.",
            "httpMethod" : "GET",
            "methodName" : "getMemberships",
            "pathChunks" : [
               "groups",
               null,
               "memberships"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Relationship>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Relationship>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of relationships that have the Admin type between users and the selected group.",
            "httpMethod" : "GET",
            "methodName" : "getAdminMemberships",
            "pathChunks" : [
               "groups",
               null,
               "memberships",
               "@admin"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Relationship>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Relationship>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of relationships that have the Blocked type between users and the selected groups. (Restricted to group admin.)",
            "httpMethod" : "GET",
            "methodName" : "getBlockedMemberships",
            "pathChunks" : [
               "groups",
               null,
               "memberships",
               "@blocked"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Relationship>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Relationship>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of relationships that have the Member type between users and the selected group.",
            "httpMethod" : "GET",
            "methodName" : "getMemberMemberships",
            "pathChunks" : [
               "groups",
               null,
               "memberships",
               "@member"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Relationship>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Relationship>"
                  }
               ]
            }
         },
         {
            "acceptedFileTypes" : [
               "image/jpeg",
               "image/png",
               "image/gif"
            ],
            "docString" : "Create a new Photo asset within the selected group.",
            "httpMethod" : "POST",
            "methodName" : "postToPhotoAssets",
            "paramObjectType" : {
               "name" : "Photo",
               "parentType" : "Asset",
               "properties" : [
                  {
                     "docString" : "T<Read Only> A link to the image that is this Photo asset's content.",
                     "name" : "imageLink",
                     "type" : "ImageLink"
                  },
                  {
                     "docString" : "T<Write Only> An optional, write-only flag indicating that asset creation should not trigger notification events such as emails or dashboard entries. Not available to all applications.",
                     "name" : "suppressEvents",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> A URI that serves as a globally unique identifier for the user.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
                     "name" : "permalinkUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The short version of the URL that is this asset's permalink. This is currently available only for O<Post> assetes.",
                     "name" : "shortUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The user who created the selected asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "T<Read Only> The time at which the asset was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  },
                  {
                     "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
                     "name" : "renderedContent",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
                     "name" : "excerpt",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of strings containing the M<id> URI of the O<Group> object that this asset is mapped into, if any. This property has been superseded by the M<container> property.",
                     "name" : "groups",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
                     "name" : "source",
                     "type" : "AssetSource"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> The keyword identifying the type of asset this is.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
                     "name" : "isFavoriteForCurrentUser",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> The number of distinct users who have added this asset as a favorite.",
                     "name" : "favoriteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
                     "name" : "commentCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The title of the asset.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the asset.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the group or blog to which this asset belongs.",
                     "name" : "container",
                     "type" : "ContainerRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this asset. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> A set of identifiers for O<Account> objects to which to crosspost this asset when it's posted. This property is omitted when retrieving existing assets.",
                     "name" : "crosspostAccounts",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> C<true> if this asset is an answer to a TypePad Conversations question, or absent otherwise. This property is deprecated and will be replaced with something more useful in future.",
                     "name" : "isConversationsAnswer",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset, this property describes the original asset.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset or some other arbitrary web page, this property contains the URL of the item that was reblogged.",
                     "name" : "reblogOfUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The total number of positive votes this asset has received via the N</assets/{id}/cast-positive-vote> endpoint.",
                     "name" : "positiveVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The total number of negative votes this asset has received via the N</assets/{id}/cast-negative-vote> endpoint.",
                     "name" : "negativeVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset has the extended content. This is currently supported only for O<Post> assets that are posted within a blog.",
                     "name" : "hasExtendedContent",
                     "type" : "boolean"
                  }
               ]
            },
            "pathChunks" : [
               "groups",
               null,
               "photo-assets"
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "name" : "Photo",
               "parentType" : "Asset",
               "properties" : [
                  {
                     "docString" : "T<Read Only> A link to the image that is this Photo asset's content.",
                     "name" : "imageLink",
                     "type" : "ImageLink"
                  },
                  {
                     "docString" : "T<Write Only> An optional, write-only flag indicating that asset creation should not trigger notification events such as emails or dashboard entries. Not available to all applications.",
                     "name" : "suppressEvents",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> A URI that serves as a globally unique identifier for the user.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
                     "name" : "permalinkUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The short version of the URL that is this asset's permalink. This is currently available only for O<Post> assetes.",
                     "name" : "shortUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The user who created the selected asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "T<Read Only> The time at which the asset was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  },
                  {
                     "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
                     "name" : "renderedContent",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
                     "name" : "excerpt",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of strings containing the M<id> URI of the O<Group> object that this asset is mapped into, if any. This property has been superseded by the M<container> property.",
                     "name" : "groups",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
                     "name" : "source",
                     "type" : "AssetSource"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> The keyword identifying the type of asset this is.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
                     "name" : "isFavoriteForCurrentUser",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> The number of distinct users who have added this asset as a favorite.",
                     "name" : "favoriteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
                     "name" : "commentCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The title of the asset.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the asset.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the group or blog to which this asset belongs.",
                     "name" : "container",
                     "type" : "ContainerRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this asset. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> A set of identifiers for O<Account> objects to which to crosspost this asset when it's posted. This property is omitted when retrieving existing assets.",
                     "name" : "crosspostAccounts",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> C<true> if this asset is an answer to a TypePad Conversations question, or absent otherwise. This property is deprecated and will be replaced with something more useful in future.",
                     "name" : "isConversationsAnswer",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset, this property describes the original asset.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset or some other arbitrary web page, this property contains the URL of the item that was reblogged.",
                     "name" : "reblogOfUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The total number of positive votes this asset has received via the N</assets/{id}/cast-positive-vote> endpoint.",
                     "name" : "positiveVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The total number of negative votes this asset has received via the N</assets/{id}/cast-negative-vote> endpoint.",
                     "name" : "negativeVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset has the extended content. This is currently supported only for O<Post> assets that are posted within a blog.",
                     "name" : "hasExtendedContent",
                     "type" : "boolean"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of recently created Photo assets from the selected group.",
            "httpMethod" : "GET",
            "methodName" : "getPhotoAssets",
            "pathChunks" : [
               "groups",
               null,
               "photo-assets"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Photo>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Photo>"
                  }
               ]
            }
         },
         {
            "docString" : "Create a new Post asset within the selected group.",
            "httpMethod" : "POST",
            "methodName" : "postToPostAssets",
            "paramObjectType" : {
               "name" : "Post",
               "parentType" : "Asset",
               "properties" : [
                  {
                     "docString" : "A list of categories associated with the post.",
                     "name" : "categories",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> A list of links to the images that are embedded within the content of this post.",
                     "name" : "embeddedImageLinks",
                     "type" : "array<ImageLink>"
                  },
                  {
                     "docString" : "T<Read Only> A list of links to the videos that are embedded within the content of this post.",
                     "name" : "embeddedVideoLinks",
                     "type" : "array<VideoLink>"
                  },
                  {
                     "docString" : "T<Read Only> A list of links to the audio streams that are embedded within the content of this post.",
                     "name" : "embeddedAudioLinks",
                     "type" : "array<AudioLink>"
                  },
                  {
                     "docString" : "The title of the post.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the post.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "The base name of the post to use when creating its M<permalinkUrl>.",
                     "name" : "filename",
                     "type" : "string"
                  },
                  {
                     "docString" : "The raw post content. The M<textFormat> property defines what format this data is in.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this post. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "An object describing the draft status and publication date for this post.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "An object describing the comment and trackback behavior for this post.",
                     "name" : "feedbackStatus",
                     "type" : "FeedbackStatus"
                  },
                  {
                     "docString" : "T<Read Only> The number of times this post has been reblogged by other people.",
                     "name" : "reblogCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Fixed After Creation> A reference to a post of which this post is a reblog.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Write Only> An optional, write-only flag indicating that asset creation should not trigger notification events such as emails or dashboard entries. Not available to all applications.",
                     "name" : "suppressEvents",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Write Only> An optional, write-only flag indicating that the asset is starting a new conversation.",
                     "name" : "createConversation",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> Identifies the O<Conversation> object this asset belongs to, if any. Omitted if the asset is not part of a conversation.",
                     "name" : "conversationId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A URI that serves as a globally unique identifier for the user.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
                     "name" : "permalinkUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The short version of the URL that is this asset's permalink. This is currently available only for O<Post> assetes.",
                     "name" : "shortUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The user who created the selected asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "T<Read Only> The time at which the asset was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  },
                  {
                     "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
                     "name" : "renderedContent",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
                     "name" : "excerpt",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of strings containing the M<id> URI of the O<Group> object that this asset is mapped into, if any. This property has been superseded by the M<container> property.",
                     "name" : "groups",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
                     "name" : "source",
                     "type" : "AssetSource"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> The keyword identifying the type of asset this is.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
                     "name" : "isFavoriteForCurrentUser",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> The number of distinct users who have added this asset as a favorite.",
                     "name" : "favoriteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
                     "name" : "commentCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The title of the asset.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the asset.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the group or blog to which this asset belongs.",
                     "name" : "container",
                     "type" : "ContainerRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this asset. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> A set of identifiers for O<Account> objects to which to crosspost this asset when it's posted. This property is omitted when retrieving existing assets.",
                     "name" : "crosspostAccounts",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> C<true> if this asset is an answer to a TypePad Conversations question, or absent otherwise. This property is deprecated and will be replaced with something more useful in future.",
                     "name" : "isConversationsAnswer",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset, this property describes the original asset.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset or some other arbitrary web page, this property contains the URL of the item that was reblogged.",
                     "name" : "reblogOfUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The total number of positive votes this asset has received via the N</assets/{id}/cast-positive-vote> endpoint.",
                     "name" : "positiveVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The total number of negative votes this asset has received via the N</assets/{id}/cast-negative-vote> endpoint.",
                     "name" : "negativeVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset has the extended content. This is currently supported only for O<Post> assets that are posted within a blog.",
                     "name" : "hasExtendedContent",
                     "type" : "boolean"
                  }
               ]
            },
            "pathChunks" : [
               "groups",
               null,
               "post-assets"
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "name" : "Post",
               "parentType" : "Asset",
               "properties" : [
                  {
                     "docString" : "A list of categories associated with the post.",
                     "name" : "categories",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> A list of links to the images that are embedded within the content of this post.",
                     "name" : "embeddedImageLinks",
                     "type" : "array<ImageLink>"
                  },
                  {
                     "docString" : "T<Read Only> A list of links to the videos that are embedded within the content of this post.",
                     "name" : "embeddedVideoLinks",
                     "type" : "array<VideoLink>"
                  },
                  {
                     "docString" : "T<Read Only> A list of links to the audio streams that are embedded within the content of this post.",
                     "name" : "embeddedAudioLinks",
                     "type" : "array<AudioLink>"
                  },
                  {
                     "docString" : "The title of the post.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the post.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "The base name of the post to use when creating its M<permalinkUrl>.",
                     "name" : "filename",
                     "type" : "string"
                  },
                  {
                     "docString" : "The raw post content. The M<textFormat> property defines what format this data is in.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this post. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "An object describing the draft status and publication date for this post.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "An object describing the comment and trackback behavior for this post.",
                     "name" : "feedbackStatus",
                     "type" : "FeedbackStatus"
                  },
                  {
                     "docString" : "T<Read Only> The number of times this post has been reblogged by other people.",
                     "name" : "reblogCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Fixed After Creation> A reference to a post of which this post is a reblog.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Write Only> An optional, write-only flag indicating that asset creation should not trigger notification events such as emails or dashboard entries. Not available to all applications.",
                     "name" : "suppressEvents",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Write Only> An optional, write-only flag indicating that the asset is starting a new conversation.",
                     "name" : "createConversation",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> Identifies the O<Conversation> object this asset belongs to, if any. Omitted if the asset is not part of a conversation.",
                     "name" : "conversationId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A URI that serves as a globally unique identifier for the user.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
                     "name" : "permalinkUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The short version of the URL that is this asset's permalink. This is currently available only for O<Post> assetes.",
                     "name" : "shortUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The user who created the selected asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "T<Read Only> The time at which the asset was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  },
                  {
                     "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
                     "name" : "renderedContent",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
                     "name" : "excerpt",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of strings containing the M<id> URI of the O<Group> object that this asset is mapped into, if any. This property has been superseded by the M<container> property.",
                     "name" : "groups",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
                     "name" : "source",
                     "type" : "AssetSource"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> The keyword identifying the type of asset this is.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
                     "name" : "isFavoriteForCurrentUser",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> The number of distinct users who have added this asset as a favorite.",
                     "name" : "favoriteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
                     "name" : "commentCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The title of the asset.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the asset.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the group or blog to which this asset belongs.",
                     "name" : "container",
                     "type" : "ContainerRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this asset. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> A set of identifiers for O<Account> objects to which to crosspost this asset when it's posted. This property is omitted when retrieving existing assets.",
                     "name" : "crosspostAccounts",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> C<true> if this asset is an answer to a TypePad Conversations question, or absent otherwise. This property is deprecated and will be replaced with something more useful in future.",
                     "name" : "isConversationsAnswer",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset, this property describes the original asset.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset or some other arbitrary web page, this property contains the URL of the item that was reblogged.",
                     "name" : "reblogOfUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The total number of positive votes this asset has received via the N</assets/{id}/cast-positive-vote> endpoint.",
                     "name" : "positiveVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The total number of negative votes this asset has received via the N</assets/{id}/cast-negative-vote> endpoint.",
                     "name" : "negativeVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset has the extended content. This is currently supported only for O<Post> assets that are posted within a blog.",
                     "name" : "hasExtendedContent",
                     "type" : "boolean"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of recently created Post assets from the selected group.",
            "httpMethod" : "GET",
            "methodName" : "getPostAssets",
            "pathChunks" : [
               "groups",
               null,
               "post-assets"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Post>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Post>"
                  }
               ]
            }
         },
         {
            "docString" : "Remove a given user as a member of the selected group.",
            "httpMethod" : "POST",
            "methodName" : "removeMember",
            "paramObjectType" : {
               "properties" : [
                  {
                     "docString" : "The M<urlId> of the user who is being removed.",
                     "name" : "userId",
                     "type" : "string"
                  }
               ]
            },
            "pathChunks" : [
               "groups",
               null,
               "remove-member"
            ],
            "pathParams" : {
               "id" : 1
            }
         },
         {
            "docString" : "Remove the block preventing the given user from joining the selected group.",
            "httpMethod" : "POST",
            "methodName" : "unblockUser",
            "paramObjectType" : {
               "properties" : [
                  {
                     "docString" : "The M<urlId> of the user who is being unblocked.",
                     "name" : "userId",
                     "type" : "string"
                  }
               ]
            },
            "pathChunks" : [
               "groups",
               null,
               "unblock-user"
            ],
            "pathParams" : {
               "id" : 1
            }
         },
         {
            "docString" : "Create a new Video asset within the selected group.",
            "httpMethod" : "POST",
            "methodName" : "postToVideoAssets",
            "paramObjectType" : {
               "name" : "Video",
               "parentType" : "Asset",
               "properties" : [
                  {
                     "docString" : "T<Fixed After Creation> A link to the video that is this Video asset's content.",
                     "name" : "videoLink",
                     "type" : "VideoLink"
                  },
                  {
                     "docString" : "T<Read Only> A link to a preview image or poster frame for this video. This property is omitted if no such image is available.",
                     "name" : "previewImageLink",
                     "type" : "ImageLink"
                  },
                  {
                     "docString" : "T<Write Only> An optional, write-only flag indicating that asset creation should not trigger notification events such\n as emails or dashboard entries. Not available to all applications.",
                     "name" : "suppressEvents",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> A URI that serves as a globally unique identifier for the user.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
                     "name" : "permalinkUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The short version of the URL that is this asset's permalink. This is currently available only for O<Post> assetes.",
                     "name" : "shortUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The user who created the selected asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "T<Read Only> The time at which the asset was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  },
                  {
                     "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
                     "name" : "renderedContent",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
                     "name" : "excerpt",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of strings containing the M<id> URI of the O<Group> object that this asset is mapped into, if any. This property has been superseded by the M<container> property.",
                     "name" : "groups",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
                     "name" : "source",
                     "type" : "AssetSource"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> The keyword identifying the type of asset this is.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
                     "name" : "isFavoriteForCurrentUser",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> The number of distinct users who have added this asset as a favorite.",
                     "name" : "favoriteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
                     "name" : "commentCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The title of the asset.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the asset.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the group or blog to which this asset belongs.",
                     "name" : "container",
                     "type" : "ContainerRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this asset. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> A set of identifiers for O<Account> objects to which to crosspost this asset when it's posted. This property is omitted when retrieving existing assets.",
                     "name" : "crosspostAccounts",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> C<true> if this asset is an answer to a TypePad Conversations question, or absent otherwise. This property is deprecated and will be replaced with something more useful in future.",
                     "name" : "isConversationsAnswer",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset, this property describes the original asset.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset or some other arbitrary web page, this property contains the URL of the item that was reblogged.",
                     "name" : "reblogOfUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The total number of positive votes this asset has received via the N</assets/{id}/cast-positive-vote> endpoint.",
                     "name" : "positiveVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The total number of negative votes this asset has received via the N</assets/{id}/cast-negative-vote> endpoint.",
                     "name" : "negativeVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset has the extended content. This is currently supported only for O<Post> assets that are posted within a blog.",
                     "name" : "hasExtendedContent",
                     "type" : "boolean"
                  }
               ]
            },
            "pathChunks" : [
               "groups",
               null,
               "video-assets"
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "name" : "Video",
               "parentType" : "Asset",
               "properties" : [
                  {
                     "docString" : "T<Fixed After Creation> A link to the video that is this Video asset's content.",
                     "name" : "videoLink",
                     "type" : "VideoLink"
                  },
                  {
                     "docString" : "T<Read Only> A link to a preview image or poster frame for this video. This property is omitted if no such image is available.",
                     "name" : "previewImageLink",
                     "type" : "ImageLink"
                  },
                  {
                     "docString" : "T<Write Only> An optional, write-only flag indicating that asset creation should not trigger notification events such\n as emails or dashboard entries. Not available to all applications.",
                     "name" : "suppressEvents",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> A URI that serves as a globally unique identifier for the user.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
                     "name" : "permalinkUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The short version of the URL that is this asset's permalink. This is currently available only for O<Post> assetes.",
                     "name" : "shortUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The user who created the selected asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "T<Read Only> The time at which the asset was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  },
                  {
                     "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
                     "name" : "renderedContent",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
                     "name" : "excerpt",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of strings containing the M<id> URI of the O<Group> object that this asset is mapped into, if any. This property has been superseded by the M<container> property.",
                     "name" : "groups",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
                     "name" : "source",
                     "type" : "AssetSource"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> The keyword identifying the type of asset this is.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
                     "name" : "isFavoriteForCurrentUser",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> The number of distinct users who have added this asset as a favorite.",
                     "name" : "favoriteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
                     "name" : "commentCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The title of the asset.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the asset.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the group or blog to which this asset belongs.",
                     "name" : "container",
                     "type" : "ContainerRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this asset. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> A set of identifiers for O<Account> objects to which to crosspost this asset when it's posted. This property is omitted when retrieving existing assets.",
                     "name" : "crosspostAccounts",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> C<true> if this asset is an answer to a TypePad Conversations question, or absent otherwise. This property is deprecated and will be replaced with something more useful in future.",
                     "name" : "isConversationsAnswer",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset, this property describes the original asset.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset or some other arbitrary web page, this property contains the URL of the item that was reblogged.",
                     "name" : "reblogOfUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The total number of positive votes this asset has received via the N</assets/{id}/cast-positive-vote> endpoint.",
                     "name" : "positiveVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The total number of negative votes this asset has received via the N</assets/{id}/cast-negative-vote> endpoint.",
                     "name" : "negativeVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset has the extended content. This is currently supported only for O<Post> assets that are posted within a blog.",
                     "name" : "hasExtendedContent",
                     "type" : "boolean"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of recently created Video assets from the selected group.",
            "httpMethod" : "GET",
            "methodName" : "getVideoAssets",
            "pathChunks" : [
               "groups",
               null,
               "video-assets"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Video>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Video>"
                  }
               ]
            }
         }
      ]
   },
   "importJobs" : {
      "methods" : [
         {
            "docString" : "Terminates a blog import job.",
            "httpMethod" : "POST",
            "methodName" : "closeJob",
            "pathChunks" : [
               "import-jobs",
               null,
               "close-job"
            ],
            "pathParams" : {
               "id" : 1
            }
         },
         {
            "acceptedFileTypes" : [
               "*/*"
            ],
            "docString" : "Add a new media asset to the account that owns the blog associated with this import job.",
            "httpMethod" : "POST",
            "methodName" : "postToMediaAssets",
            "paramObjectType" : {
               "name" : "Asset",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "T<Read Only> A URI that serves as a globally unique identifier for the user.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
                     "name" : "permalinkUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The short version of the URL that is this asset's permalink. This is currently available only for O<Post> assetes.",
                     "name" : "shortUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The user who created the selected asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "T<Read Only> The time at which the asset was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  },
                  {
                     "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
                     "name" : "renderedContent",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
                     "name" : "excerpt",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of strings containing the M<id> URI of the O<Group> object that this asset is mapped into, if any. This property has been superseded by the M<container> property.",
                     "name" : "groups",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
                     "name" : "source",
                     "type" : "AssetSource"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> The keyword identifying the type of asset this is.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
                     "name" : "isFavoriteForCurrentUser",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> The number of distinct users who have added this asset as a favorite.",
                     "name" : "favoriteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
                     "name" : "commentCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The title of the asset.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the asset.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the group or blog to which this asset belongs.",
                     "name" : "container",
                     "type" : "ContainerRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this asset. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> A set of identifiers for O<Account> objects to which to crosspost this asset when it's posted. This property is omitted when retrieving existing assets.",
                     "name" : "crosspostAccounts",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> C<true> if this asset is an answer to a TypePad Conversations question, or absent otherwise. This property is deprecated and will be replaced with something more useful in future.",
                     "name" : "isConversationsAnswer",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset, this property describes the original asset.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset or some other arbitrary web page, this property contains the URL of the item that was reblogged.",
                     "name" : "reblogOfUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The total number of positive votes this asset has received via the N</assets/{id}/cast-positive-vote> endpoint.",
                     "name" : "positiveVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The total number of negative votes this asset has received via the N</assets/{id}/cast-negative-vote> endpoint.",
                     "name" : "negativeVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset has the extended content. This is currently supported only for O<Post> assets that are posted within a blog.",
                     "name" : "hasExtendedContent",
                     "type" : "boolean"
                  }
               ]
            },
            "pathChunks" : [
               "import-jobs",
               null,
               "media-assets"
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "name" : "Asset",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "T<Read Only> A URI that serves as a globally unique identifier for the user.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
                     "name" : "permalinkUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The short version of the URL that is this asset's permalink. This is currently available only for O<Post> assetes.",
                     "name" : "shortUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The user who created the selected asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "T<Read Only> The time at which the asset was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  },
                  {
                     "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
                     "name" : "content",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
                     "name" : "renderedContent",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
                     "name" : "excerpt",
                     "type" : "string"
                  },
                  {
                     "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
                     "name" : "textFormat",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of strings containing the M<id> URI of the O<Group> object that this asset is mapped into, if any. This property has been superseded by the M<container> property.",
                     "name" : "groups",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
                     "name" : "source",
                     "type" : "AssetSource"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> The keyword identifying the type of asset this is.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
                     "name" : "isFavoriteForCurrentUser",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> The number of distinct users who have added this asset as a favorite.",
                     "name" : "favoriteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
                     "name" : "commentCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The title of the asset.",
                     "name" : "title",
                     "type" : "string"
                  },
                  {
                     "docString" : "The description of the asset.",
                     "name" : "description",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> An object describing the group or blog to which this asset belongs.",
                     "name" : "container",
                     "type" : "ContainerRef"
                  },
                  {
                     "docString" : "An object describing the visibility status and publication date for this asset. Only visibility status is editable.",
                     "name" : "publicationStatus",
                     "type" : "PublicationStatus"
                  },
                  {
                     "docString" : "T<Write Only> A set of identifiers for O<Account> objects to which to crosspost this asset when it's posted. This property is omitted when retrieving existing assets.",
                     "name" : "crosspostAccounts",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> C<true> if this asset is an answer to a TypePad Conversations question, or absent otherwise. This property is deprecated and will be replaced with something more useful in future.",
                     "name" : "isConversationsAnswer",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset, this property describes the original asset.",
                     "name" : "reblogOf",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "T<Read Only> T<Deprecated> If this asset was created by 'reblogging' another asset or some other arbitrary web page, this property contains the URL of the item that was reblogged.",
                     "name" : "reblogOfUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Read Only> The total number of positive votes this asset has received via the N</assets/{id}/cast-positive-vote> endpoint.",
                     "name" : "positiveVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> The total number of negative votes this asset has received via the N</assets/{id}/cast-negative-vote> endpoint.",
                     "name" : "negativeVoteCount",
                     "type" : "integer"
                  },
                  {
                     "docString" : "T<Read Only> C<true> if this asset has the extended content. This is currently supported only for O<Post> assets that are posted within a blog.",
                     "name" : "hasExtendedContent",
                     "type" : "boolean"
                  }
               ]
            }
         },
         {
            "docString" : "Imports a selection of items into a blog import job.",
            "httpMethod" : "POST",
            "methodName" : "submitItems",
            "paramObjectType" : {
               "properties" : [
                  {
                     "docString" : "Represents objects to import.",
                     "name" : "items",
                     "type" : "array<ImportAsset>"
                  }
               ]
            },
            "pathChunks" : [
               "import-jobs",
               null,
               "submit-items"
            ],
            "pathParams" : {
               "id" : 1
            }
         }
      ]
   },
   "relationships" : {
      "methods" : [
         {
            "docString" : "Get basic information about the selected relationship.",
            "httpMethod" : "GET",
            "methodName" : "get",
            "pathChunks" : [
               "relationships",
               null
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {},
            "returnObjectType" : {
               "name" : "Relationship",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "A URI that serves as a globally unique identifier for the relationship.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same relationship is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "The source entity of the relationship.",
                     "name" : "source",
                     "type" : "Entity"
                  },
                  {
                     "docString" : "The target entity of the relationship.",
                     "name" : "target",
                     "type" : "Entity"
                  },
                  {
                     "docString" : "An object describing all the types of relationship that currently exist between the source and target objects.",
                     "name" : "status",
                     "type" : "RelationshipStatus"
                  },
                  {
                     "docString" : "A mapping of the relationship types present between the source and target objects to the times those types of relationship were established. The keys of the map are the relationship type URIs present in the relationship's M<status> property; the values are W3CDTF timestamps for the times those relationship edges were created.",
                     "name" : "created",
                     "type" : "map<datetime>"
                  }
               ]
            }
         },
         {
            "docString" : "Get the status information for the selected relationship, including its types.",
            "httpMethod" : "GET",
            "methodName" : "getStatus",
            "pathChunks" : [
               "relationships",
               null,
               "status"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {},
            "returnObjectType" : {
               "name" : "RelationshipStatus",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "A list of relationship type URIs describing the types of the related relationship.",
                     "name" : "types",
                     "type" : "array<string>"
                  }
               ]
            }
         },
         {
            "docString" : "Change the status information for the selected relationship, including its types.",
            "httpMethod" : "PUT",
            "methodName" : "putStatus",
            "paramObjectType" : {
               "name" : "RelationshipStatus",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "A list of relationship type URIs describing the types of the related relationship.",
                     "name" : "types",
                     "type" : "array<string>"
                  }
               ]
            },
            "pathChunks" : [
               "relationships",
               null,
               "status"
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "name" : "RelationshipStatus",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "A list of relationship type URIs describing the types of the related relationship.",
                     "name" : "types",
                     "type" : "array<string>"
                  }
               ]
            }
         }
      ]
   },
   "requestProperties" : {
      "methods" : [
         {
            "docString" : "Retrieve some request properties. This can be useful for debugging authentication issues.",
            "httpMethod" : "GET",
            "methodName" : "get",
            "pathChunks" : [
               "request-properties"
            ],
            "pathParams" : {},
            "queryParams" : {},
            "returnObjectType" : {
               "name" : "RequestProperties",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The M<urlId> of the authenticated user for this request. Ommitted if there is no authenticated user.",
                     "name" : "userId",
                     "type" : "string"
                  },
                  {
                     "docString" : "The M<urlId> of the authenticated application for this request. Ommitted if there is no authenticated application.",
                     "name" : "applicationId",
                     "type" : "string"
                  },
                  {
                     "docString" : "The API key that was used for this request, if the request is using OAuth. Ommitted if the request is not using OAuth.",
                     "name" : "apiKey",
                     "type" : "string"
                  },
                  {
                     "docString" : "True if the caller for this request could modify content connected to the authenticated application, or false otherwise.",
                     "name" : "canModifyApplicationContent",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "True if the caller for this request could modify content that is part of the main TypePad application, or false otherwise.",
                     "name" : "canModifyTypepadContent",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "True if this request came in on a channel that has access to internal-only API features.",
                     "name" : "clientIsInternal",
                     "type" : "boolean"
                  },
                  {
                     "docString" : "The IP address of the requesting client, expressed in dotted-decimal notation.",
                     "name" : "remoteIpAddress",
                     "type" : "string"
                  }
               ]
            }
         }
      ]
   },
   "users" : {
      "methods" : [
         {
            "docString" : "Get basic information about the selected user.",
            "httpMethod" : "GET",
            "methodName" : "get",
            "pathChunks" : [
               "users",
               null
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {},
            "returnObjectType" : {
               "name" : "User",
               "parentType" : "Entity",
               "properties" : [
                  {
                     "docString" : "The user's chosen display name.",
                     "name" : "displayName",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Deprecated> The user's location, as a free-form string provided by them. Use the the M<location> property of the related O<UserProfile> object, which can be retrieved from the N</users/{id}/profile> endpoint.",
                     "name" : "location",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Deprecated> A list of interests provided by the user and displayed on the user's profile page. Use the M<interests> property of the O<UserProfile> object, which can be retrieved from the N</users/{id}/profile> endpoint.",
                     "name" : "interests",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "The name the user has chosen for use in the URL of their TypePad profile page. This property can be used to select this user in URLs, although it is not a persistent key, as the user can change it at any time.",
                     "name" : "preferredUsername",
                     "type" : "string"
                  },
                  {
                     "docString" : "A link to an image representing this user.",
                     "name" : "avatarLink",
                     "type" : "ImageLink"
                  },
                  {
                     "docString" : "The URL of the user's TypePad profile page.",
                     "name" : "profilePageUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Deprecated> An array of object type identifier URIs.",
                     "name" : "objectTypes",
                     "type" : "set<string>"
                  },
                  {
                     "docString" : "The keyword identifying the type of object this is. For a User object, M<objectType> will be C<User>.",
                     "name" : "objectType",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Deprecated> The user's email address. This property is only provided for authenticated requests if the user has shared it with the authenticated application, and the authenticated user is allowed to view it (as with administrators of groups the user has joined). In all other cases, this property is omitted.",
                     "name" : "email",
                     "type" : "string"
                  },
                  {
                     "docString" : "T<Deprecated> The user's gender, as they provided it. This property is only provided for authenticated requests if the user has shared it with the authenticated application, and the authenticated user is allowed to view it (as with administrators of groups the user has joined). In all other cases, this property is omitted.",
                     "name" : "gender",
                     "type" : "string"
                  },
                  {
                     "docString" : "A URI that serves as a globally unique identifier for the object.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of badges that the selected user has won.",
            "httpMethod" : "GET",
            "methodName" : "getBadges",
            "pathChunks" : [
               "users",
               null,
               "badges"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<UserBadge>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<UserBadge>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of learning badges that the selected user has won.",
            "httpMethod" : "GET",
            "methodName" : "getLearningBadges",
            "pathChunks" : [
               "users",
               null,
               "badges",
               "@learning"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<UserBadge>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<UserBadge>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of public badges that the selected user has won.",
            "httpMethod" : "GET",
            "methodName" : "getPublicBadges",
            "pathChunks" : [
               "users",
               null,
               "badges",
               "@public"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<UserBadge>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<UserBadge>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of blogs that the selected user has access to.",
            "httpMethod" : "GET",
            "methodName" : "getBlogs",
            "pathChunks" : [
               "users",
               null,
               "blogs"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Blog>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Blog>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of elsewhere accounts for the selected user.",
            "httpMethod" : "GET",
            "methodName" : "getElsewhereAccounts",
            "pathChunks" : [
               "users",
               null,
               "elsewhere-accounts"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Account>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Account>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of events describing actions that the selected user performed.",
            "httpMethod" : "GET",
            "methodName" : "getEvents",
            "pathChunks" : [
               "users",
               null,
               "events"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "startToken" : "start-token"
            },
            "returnObjectType" : {
               "name" : "Stream<Event>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole stream of which this response contains a subset. C<null> if an exact count cannot be determined.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "An estimate of the total number of items in the whole list of which this response contains a subset. C<null> if a count cannot be determined at all, or if an exact count is returned in C<totalResults>.",
                     "name" : "estimatedTotalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "An opaque token that can be used as the C<start-token> parameter of a followup request to retrieve additional results. C<null> if there are no more results to retrieve, but the presence of this token does not guarantee that the response to a followup request will actually contain results.",
                     "name" : "moreResultsToken",
                     "type" : "string"
                  },
                  {
                     "docString" : "A selection of items from the underlying stream.",
                     "name" : "entries",
                     "type" : "array<Event>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of events describing actions that the selected user performed in a particular group.",
            "httpMethod" : "GET",
            "methodName" : "getEventsByGroup",
            "pathChunks" : [
               "users",
               null,
               "events",
               "@by-group",
               null
            ],
            "pathParams" : {
               "groupId" : 4,
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Event>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Event>"
                  }
               ]
            }
         },
         {
            "docString" : "Create a new favorite in the selected user's list of favorites.",
            "httpMethod" : "POST",
            "methodName" : "postToFavorites",
            "paramObjectType" : {
               "name" : "Favorite",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "A URI that serves as a globally unique identifier for the favorite.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "A string containing the canonical identifier that can be used to identify this favorite in URLs. This can be used to recognise where the same favorite is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "The user who saved this favorite. That is, this property is the user who saved the target asset as a favorite, not the creator of that asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "A reference to the target asset that has been marked as a favorite.",
                     "name" : "inReplyTo",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "The time that the favorite was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  }
               ]
            },
            "pathChunks" : [
               "users",
               null,
               "favorites"
            ],
            "pathParams" : {
               "id" : 1
            },
            "returnObjectType" : {
               "name" : "Favorite",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "A URI that serves as a globally unique identifier for the favorite.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "A string containing the canonical identifier that can be used to identify this favorite in URLs. This can be used to recognise where the same favorite is returned in response to different requests, and as a mapping key for an application's local data store.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "The user who saved this favorite. That is, this property is the user who saved the target asset as a favorite, not the creator of that asset.",
                     "name" : "author",
                     "type" : "User"
                  },
                  {
                     "docString" : "A reference to the target asset that has been marked as a favorite.",
                     "name" : "inReplyTo",
                     "type" : "AssetRef"
                  },
                  {
                     "docString" : "The time that the favorite was created, as a W3CDTF timestamp.",
                     "name" : "published",
                     "type" : "datetime"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of favorites that were listed by the selected user.",
            "httpMethod" : "GET",
            "methodName" : "getFavorites",
            "pathChunks" : [
               "users",
               null,
               "favorites"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Favorite>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Favorite>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of relationships that the selected user has with groups.",
            "httpMethod" : "GET",
            "methodName" : "getMemberships",
            "pathChunks" : [
               "users",
               null,
               "memberships"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Relationship>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Relationship>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of relationships that have an Admin type that the selected user has with groups.",
            "httpMethod" : "GET",
            "methodName" : "getAdminMemberships",
            "pathChunks" : [
               "users",
               null,
               "memberships",
               "@admin"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Relationship>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Relationship>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list containing only the relationship between the selected user and a particular group, or an empty list if the user has no relationship with the group.",
            "httpMethod" : "GET",
            "methodName" : "getMembershipsByGroup",
            "pathChunks" : [
               "users",
               null,
               "memberships",
               "@by-group",
               null
            ],
            "pathParams" : {
               "groupId" : 4,
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Relationship>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Relationship>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of relationships that have a Member type that the selected user has with groups.",
            "httpMethod" : "GET",
            "methodName" : "getMemberMemberships",
            "pathChunks" : [
               "users",
               null,
               "memberships",
               "@member"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Relationship>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Relationship>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of events describing actions by users that the selected user is following.",
            "httpMethod" : "GET",
            "methodName" : "getNotifications",
            "pathChunks" : [
               "users",
               null,
               "notifications"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Event>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Event>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of events describing actions in a particular group by users that the selected user is following.",
            "httpMethod" : "GET",
            "methodName" : "getNotificationsByGroup",
            "pathChunks" : [
               "users",
               null,
               "notifications",
               "@by-group",
               null
            ],
            "pathParams" : {
               "groupId" : 4,
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Event>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Event>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a more extensive set of user properties that can be used to build a user profile page.",
            "httpMethod" : "GET",
            "methodName" : "getProfile",
            "pathChunks" : [
               "users",
               null,
               "profile"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "UserProfile",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The URI from the related O<User> object's M<id> property.",
                     "name" : "id",
                     "type" : "string"
                  },
                  {
                     "docString" : "The canonical identifier from the related O<User> object's M<urlId> property.",
                     "name" : "urlId",
                     "type" : "string"
                  },
                  {
                     "docString" : "The user's chosen display name.",
                     "name" : "displayName",
                     "type" : "string"
                  },
                  {
                     "docString" : "The user's location, as a free-form string they provided.",
                     "name" : "location",
                     "type" : "string"
                  },
                  {
                     "docString" : "The user's long description or biography, as a free-form string they provided.",
                     "name" : "aboutMe",
                     "type" : "string"
                  },
                  {
                     "docString" : "A list of interests provided by the user and displayed on their profile page.",
                     "name" : "interests",
                     "type" : "array<string>"
                  },
                  {
                     "docString" : "The name the user has chosen for use in the URL of their TypePad profile page. This property can be used to select this user in URLs, although it is not a persistent key, as the user can change it at any time.",
                     "name" : "preferredUsername",
                     "type" : "string"
                  },
                  {
                     "docString" : "A link to an image representing this user.",
                     "name" : "avatarLink",
                     "type" : "ImageLink"
                  },
                  {
                     "docString" : "The URL of the user's TypePad profile page.",
                     "name" : "profilePageUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "The URL of a widget that, when rendered in an C<iframe>, allows viewers to follow this user. Render this widget in an C<iframe> 300 pixels wide and 125 pixels high.",
                     "name" : "followFrameContentUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "The URL of a page where this user can edit their profile information. If this is not the authenticated user's UserProfile object, this property is omitted.",
                     "name" : "profileEditPageUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "The URL of a page where this user can manage their group memberships. If this is not the authenticated user's UserProfile object, this property is omitted.",
                     "name" : "membershipManagementPageUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "The address of the user's homepage, as a URL they provided. This property is omitted if the user has not provided a homepage.",
                     "name" : "homepageUrl",
                     "type" : "string"
                  },
                  {
                     "docString" : "The user's email address. This property is only provided for authenticated requests if the user has shared it with the authenticated application, and the authenticated user is allowed to view it (as with administrators of groups the user has joined). In all other cases, this property is omitted.",
                     "name" : "email",
                     "type" : "string"
                  },
                  {
                     "docString" : "The user's gender, as they provided it. This property is only provided for authenticated requests if the user has shared it with the authenticated application, and the authenticated user is allowed to view it (as with administrators of groups the user has joined). In all other cases, this property is omitted.",
                     "name" : "gender",
                     "type" : "string"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of relationships that the selected user has with other users, and that other users have with the selected user.",
            "httpMethod" : "GET",
            "methodName" : "getRelationships",
            "pathChunks" : [
               "users",
               null,
               "relationships"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Relationship>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Relationship>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of relationships that the selected user has with other users, and that other users have with the selected user, constrained to members of a particular group.",
            "httpMethod" : "GET",
            "methodName" : "getRelationshipsByGroup",
            "pathChunks" : [
               "users",
               null,
               "relationships",
               "@by-group",
               null
            ],
            "pathParams" : {
               "groupId" : 4,
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Relationship>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Relationship>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of relationships that the selected user has with a single other user.",
            "httpMethod" : "GET",
            "methodName" : "getRelationshipsByUser",
            "pathChunks" : [
               "users",
               null,
               "relationships",
               "@by-user",
               null
            ],
            "pathParams" : {
               "id" : 1,
               "userId" : 4
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Relationship>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Relationship>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of relationships that have the Contact type that the selected user has with other users.",
            "httpMethod" : "GET",
            "methodName" : "getFollowerRelationships",
            "pathChunks" : [
               "users",
               null,
               "relationships",
               "@follower"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Relationship>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Relationship>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of relationships that have the Contact type that the selected user has with other users, constrained to members of a particular group.",
            "httpMethod" : "GET",
            "methodName" : "getFollowerRelationshipsByGroup",
            "pathChunks" : [
               "users",
               null,
               "relationships",
               "@follower",
               "@by-group",
               null
            ],
            "pathParams" : {
               "groupId" : 5,
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Relationship>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Relationship>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of relationships that have the Contact type that other users have with the selected user.",
            "httpMethod" : "GET",
            "methodName" : "getFollowingRelationships",
            "pathChunks" : [
               "users",
               null,
               "relationships",
               "@following"
            ],
            "pathParams" : {
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Relationship>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Relationship>"
                  }
               ]
            }
         },
         {
            "docString" : "Get a list of relationships that have the Contact type that other users have with the selected user, constrained to members of a particular group.",
            "httpMethod" : "GET",
            "methodName" : "getFollowingRelationshipsByGroup",
            "pathChunks" : [
               "users",
               null,
               "relationships",
               "@following",
               "@by-group",
               null
            ],
            "pathParams" : {
               "groupId" : 5,
               "id" : 1
            },
            "queryParams" : {
               "limit" : "max-results",
               "offset" : "start-index"
            },
            "returnObjectType" : {
               "name" : "List<Relationship>",
               "parentType" : "Base",
               "properties" : [
                  {
                     "docString" : "The total number of items in the whole list of which this list object is a paginated view.",
                     "name" : "totalResults",
                     "type" : "integer"
                  },
                  {
                     "docString" : "The items within the selected slice of the list.",
                     "name" : "entries",
                     "type" : "array<Relationship>"
                  }
               ]
            }
         }
      ]
   }
}
