{
   "entries" : [
      {
         "name" : "Account",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "A URI that serves as a globally unique identifier for the account.",
               "name" : "id",
               "type" : "string"
            },
            {
               "docString" : "The DNS domain of the service that provides the account.",
               "name" : "domain",
               "type" : "string"
            },
            {
               "docString" : "The username of the account, if known. (Some sites only have a M<userId>.)",
               "name" : "username",
               "type" : "string"
            },
            {
               "docString" : "The machine identifier or primary key for the account, if known. (Some sites only have a M<username>.)",
               "name" : "userId",
               "type" : "string"
            },
            {
               "docString" : "The URL of the user's profile or primary page on the remote site, if known.",
               "name" : "url",
               "type" : "string"
            },
            {
               "docString" : "A human-friendly name for the service that provides this account.",
               "name" : "providerName",
               "type" : "string"
            },
            {
               "docString" : "The URL of the home page of the service that provides this account.",
               "name" : "providerURL",
               "type" : "string"
            },
            {
               "docString" : "The URL of a 16-by-16 pixel icon that represents the service that provides this account.",
               "name" : "providerIconURL",
               "type" : "string"
            },
            {
               "docString" : "C<true> if this account can be used to crosspost, or C<false> otherwise. An account can be used to crosspost if its service supports crossposting and the user has enabled crossposting for the specific account.",
               "name" : "crosspostable",
               "type" : "boolean"
            }
         ]
      },
      {
         "name" : "ApiKey",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "The actual API key string. Use this as the consumer key when making an OAuth request.",
               "name" : "apiKey",
               "type" : "string"
            },
            {
               "docString" : "The application that owns this API key.",
               "name" : "owner",
               "type" : "Application"
            }
         ]
      },
      {
         "name" : "Application",
         "parentType" : "Entity",
         "properties" : [
            {
               "docString" : "The name of the application as provided by its developer.",
               "name" : "name",
               "type" : "string"
            },
            {
               "docString" : "T<Deprecated> The object types for this object. This set will contain the string C<tag:api.typepad.com,2009:Application> for an Application object.",
               "name" : "objectTypes",
               "type" : "set<string>"
            },
            {
               "docString" : "The keyword identifying the type of object this is. For an Application object, M<objectType> will be C<Application>.",
               "name" : "objectType",
               "type" : "string"
            },
            {
               "docString" : "The URL of the OAuth request token endpoint for this application.",
               "name" : "oauthRequestTokenUrl",
               "type" : "string"
            },
            {
               "docString" : "The URL to send the user's browser to for the user authorization step.",
               "name" : "oauthAuthorizationUrl",
               "type" : "string"
            },
            {
               "docString" : "The URL of the OAuth access token endpoint for this application.",
               "name" : "oauthAccessTokenUrl",
               "type" : "string"
            },
            {
               "docString" : "The URL to send the user's browser to in order to identify who is logged in (that is, the \"sign in\" link).",
               "name" : "oauthIdentificationUrl",
               "type" : "string"
            },
            {
               "docString" : "The URL of the session sync script.",
               "name" : "sessionSyncScriptUrl",
               "type" : "string"
            },
            {
               "docString" : "The URL to send the user's browser to in order to sign them out of TypePad.",
               "name" : "signoutUrl",
               "type" : "string"
            },
            {
               "docString" : "The URL of a script to embed to enable the user flyouts functionality.",
               "name" : "userFlyoutsScriptUrl",
               "type" : "string"
            },
            {
               "docString" : "A URI that serves as a globally unique identifier for the object. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
               "name" : "id",
               "type" : "string"
            },
            {
               "docString" : "A string containing the canonical identifier that can be used to identify this object in URLs. However, this should not be used as a database key to avoid collisions when an application is switched to a different backend server; use the C<id> property instead.",
               "name" : "urlId",
               "type" : "string"
            }
         ]
      },
      {
         "name" : "Asset",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "A URI that serves as a globally unique identifier for the user.",
               "name" : "id",
               "type" : "string"
            },
            {
               "docString" : "A string containing the canonical identifier that can be used to identify this object in URLs. However, this should not be used as a database key to avoid collisions when an application is switched to a different backend server; use the M<id> property instead.",
               "name" : "urlId",
               "type" : "string"
            },
            {
               "docString" : "The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
               "name" : "permalinkUrl",
               "type" : "string"
            },
            {
               "docString" : "The user who created the selected asset.",
               "name" : "author",
               "type" : "User"
            },
            {
               "docString" : "The time at which the asset was created, as an L<http://www.ietf.org/rfc/rfc3339.txt|RFC3339> timestamp.",
               "name" : "published",
               "type" : "string"
            },
            {
               "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
               "name" : "content",
               "type" : "string"
            },
            {
               "docString" : "The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
               "name" : "renderedContent",
               "type" : "string"
            },
            {
               "docString" : "A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
               "name" : "excerpt",
               "type" : "string"
            },
            {
               "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
               "name" : "textFormat",
               "type" : "string"
            },
            {
               "docString" : "An array of strings containing the M<id> URIs of the groups that this asset is mapped into, if any. At present an asset can only be added to one group, but this may change in future.",
               "name" : "groups",
               "type" : "array<string>"
            },
            {
               "docString" : "An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
               "name" : "source",
               "type" : "AssetSource"
            },
            {
               "docString" : "T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
               "name" : "objectTypes",
               "type" : "set<string>"
            },
            {
               "docString" : "The keyword identifying the type of asset this is.",
               "name" : "objectType",
               "type" : "string"
            },
            {
               "docString" : "C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
               "name" : "isFavoriteForCurrentUser",
               "type" : "boolean"
            },
            {
               "docString" : "The number of distinct users who have added this asset as a favorite.",
               "name" : "favoriteCount",
               "type" : "integer"
            },
            {
               "docString" : "The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
               "name" : "commentCount",
               "type" : "integer"
            },
            {
               "docString" : "The title of the asset.",
               "name" : "title",
               "type" : "string"
            },
            {
               "docString" : "The description of the asset.",
               "name" : "description",
               "type" : "string"
            },
            {
               "docString" : "An object describing the group or blog to which this asset belongs.",
               "name" : "container",
               "type" : "ContainerRef"
            }
         ]
      },
      {
         "name" : "AssetRef",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "A URI that serves as a globally unique identifier for the referenced asset. This matches the M<id> property of the referenced O<Asset> object.",
               "name" : "id",
               "type" : "string"
            },
            {
               "docString" : "A string containing the canonical identifier that can be used to identify this object in URLs. However, this should not be used as a database key to avoid collisions when an application is switched to a different backend server such as the development server; use the M<id> property instead. This matchies the M<urlId> property in the referenced asset.",
               "name" : "urlId",
               "type" : "string"
            },
            {
               "docString" : "The URL of a representation of the referenced asset.",
               "name" : "href",
               "type" : "string"
            },
            {
               "docString" : "The MIME type of the representation at the URL given in the M<href> property.",
               "name" : "type",
               "type" : "string"
            },
            {
               "docString" : "The user who created the referenced asset.",
               "name" : "author",
               "type" : "User"
            },
            {
               "docString" : "T<Deprecated> An array of object type identifier URIs identifying the type of the referenced asset. Only the one object type URI for the particular type of asset the referenced asset is will be present.",
               "name" : "objectTypes",
               "type" : "array<string>"
            },
            {
               "docString" : "The keyword identifying the type of asset the referenced O<Asset> object is.",
               "name" : "objectType",
               "type" : "string"
            }
         ]
      },
      {
         "name" : "AssetSource",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "T<Deprecated> C<true> if this content is considered to be created by its author, or C<false> if it's actually someone else's content imported by the asset author.",
               "name" : "byUser",
               "type" : "boolean"
            },
            {
               "docString" : "The permalink URL of the resource from which the related asset was imported.",
               "name" : "permalinkUrl",
               "type" : "string"
            },
            {
               "docString" : "T<Deprecated> Description of the external service provider from which this content was imported, if known. Contains C<name>, C<icon>, and C<uri> properties. This property will be omitted if the service from which the related asset was imported is not recognized.",
               "name" : "provider",
               "type" : "map<string>"
            }
         ]
      },
      {
         "name" : "Audio",
         "parentType" : "Asset",
         "properties" : [
            {
               "docString" : "A link to the audio stream that is this Audio asset's content.",
               "name" : "audioLink",
               "type" : "AudioLink"
            },
            {
               "docString" : "A URI that serves as a globally unique identifier for the user.",
               "name" : "id",
               "type" : "string"
            },
            {
               "docString" : "A string containing the canonical identifier that can be used to identify this object in URLs. However, this should not be used as a database key to avoid collisions when an application is switched to a different backend server; use the M<id> property instead.",
               "name" : "urlId",
               "type" : "string"
            },
            {
               "docString" : "The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
               "name" : "permalinkUrl",
               "type" : "string"
            },
            {
               "docString" : "The user who created the selected asset.",
               "name" : "author",
               "type" : "User"
            },
            {
               "docString" : "The time at which the asset was created, as an L<http://www.ietf.org/rfc/rfc3339.txt|RFC3339> timestamp.",
               "name" : "published",
               "type" : "string"
            },
            {
               "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
               "name" : "content",
               "type" : "string"
            },
            {
               "docString" : "The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
               "name" : "renderedContent",
               "type" : "string"
            },
            {
               "docString" : "A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
               "name" : "excerpt",
               "type" : "string"
            },
            {
               "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
               "name" : "textFormat",
               "type" : "string"
            },
            {
               "docString" : "An array of strings containing the M<id> URIs of the groups that this asset is mapped into, if any. At present an asset can only be added to one group, but this may change in future.",
               "name" : "groups",
               "type" : "array<string>"
            },
            {
               "docString" : "An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
               "name" : "source",
               "type" : "AssetSource"
            },
            {
               "docString" : "T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
               "name" : "objectTypes",
               "type" : "set<string>"
            },
            {
               "docString" : "The keyword identifying the type of asset this is.",
               "name" : "objectType",
               "type" : "string"
            },
            {
               "docString" : "C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
               "name" : "isFavoriteForCurrentUser",
               "type" : "boolean"
            },
            {
               "docString" : "The number of distinct users who have added this asset as a favorite.",
               "name" : "favoriteCount",
               "type" : "integer"
            },
            {
               "docString" : "The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
               "name" : "commentCount",
               "type" : "integer"
            },
            {
               "docString" : "The title of the asset.",
               "name" : "title",
               "type" : "string"
            },
            {
               "docString" : "The description of the asset.",
               "name" : "description",
               "type" : "string"
            },
            {
               "docString" : "An object describing the group or blog to which this asset belongs.",
               "name" : "container",
               "type" : "ContainerRef"
            }
         ]
      },
      {
         "name" : "AudioLink",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "The URL of an MP3 representation of the audio stream.",
               "name" : "url",
               "type" : "string"
            },
            {
               "docString" : "The duration of the audio stream in seconds. This property will be omitted if the length of the audio stream could not be determined.",
               "name" : "duration",
               "type" : "integer"
            }
         ]
      },
      {
         "name" : "AuthToken",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "The actual auth token string. Use this as the access token when making an OAuth request.",
               "name" : "authToken",
               "type" : "string"
            },
            {
               "docString" : "T<Deprecated> The root object to which this auth token grants access. This is a legacy field maintained for backwards compatibility with older clients, as auth tokens are no longer scoped to specific objects.",
               "name" : "targetObject",
               "type" : "Base"
            }
         ]
      },
      {
         "name" : "Base",
         "properties" : []
      },
      {
         "name" : "Blog",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "A URI that serves as a globally unique identifier for the object. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
               "name" : "id",
               "type" : "string"
            },
            {
               "docString" : "A string containing the canonical identifier that can be used to identify this object in URLs. However, this should not be used as a database key to avoid collisions when an application is switched to a different backend server; use the M<id> property instead.",
               "name" : "urlId",
               "type" : "string"
            },
            {
               "docString" : "The title of the blog.",
               "name" : "title",
               "type" : "string"
            },
            {
               "docString" : "The URL of the blog's home page.",
               "name" : "homeUrl",
               "type" : "string"
            },
            {
               "docString" : "The user who owns the blog.",
               "name" : "owner",
               "type" : "User"
            },
            {
               "docString" : "The description of the blog as provided by its owner.",
               "name" : "description",
               "type" : "string"
            },
            {
               "docString" : "T<Deprecated> An array of object type identifier URIs. This set will contain the string C<tag:api.typepad.com,2009:Blog> for a Blog object.",
               "name" : "objectTypes",
               "type" : "set<string>"
            },
            {
               "docString" : "The keyword identifying the type of object this is. For a Blog object, M<objectType> will be C<Blog>.",
               "name" : "objectType",
               "type" : "string"
            }
         ]
      },
      {
         "name" : "BlogCommentingSettings",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "C<true> if this blog allows users to sign in to comment, or C<false> if all new comments are anonymous.",
               "name" : "signinAllowed",
               "type" : "boolean"
            },
            {
               "docString" : "C<true> if this blog requires users to be logged in in order to leave a comment, or C<false> if anonymous comments will be rejected.",
               "name" : "signinRequired",
               "type" : "boolean"
            },
            {
               "docString" : "C<true> if this blog requires anonymous comments to be submitted with an email address, or C<false> otherwise.",
               "name" : "emailAddressRequired",
               "type" : "boolean"
            },
            {
               "docString" : "C<true> if this blog requires anonymous commenters to pass a CAPTCHA before submitting a comment, or C<false> otherwise.",
               "name" : "captchaRequired",
               "type" : "boolean"
            },
            {
               "docString" : "C<true> if this blog places new comments into a moderation queue for approval before they are displayed, or C<false> if new comments may be available immediately.",
               "name" : "moderationEnabled",
               "type" : "boolean"
            },
            {
               "docString" : "Number of days after a post is published that comments will be allowed. If the blog has no time limit for comments, this property will be omitted.",
               "name" : "timeLimit",
               "type" : "integer"
            },
            {
               "docString" : "C<true> if this blog allows commenters to use basic HTML formatting in comments, or C<false> if HTML will be removed.",
               "name" : "htmlAllowed",
               "type" : "boolean"
            },
            {
               "docString" : "C<true> if comments in this blog will automatically have any bare URLs turned into links, or C<false> if URLs will be shown unlinked.",
               "name" : "urlsAutoLinked",
               "type" : "boolean"
            }
         ]
      },
      {
         "name" : "BlogStats",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "The total number of page views received by the blog for all time.",
               "name" : "totalPageViews",
               "type" : "integer"
            },
            {
               "docString" : "A map containing the daily page views on the blog for the last 120 days. The keys of the map are dates in W3CDTF format, and the values are the integer number of page views on the blog for that date.",
               "name" : "dailyPageViews",
               "type" : "map<integer>"
            }
         ]
      },
      {
         "name" : "Comment",
         "parentType" : "Asset",
         "properties" : [
            {
               "docString" : "A reference to the asset that this comment is in reply to.",
               "name" : "inReplyTo",
               "type" : "AssetRef"
            },
            {
               "docString" : "T<Editable> An object describing the visibility status and publication date for this page. Only visibility status is editable.",
               "name" : "publicationStatus",
               "type" : "PublicationStatus"
            },
            {
               "docString" : "A URI that serves as a globally unique identifier for the user.",
               "name" : "id",
               "type" : "string"
            },
            {
               "docString" : "A string containing the canonical identifier that can be used to identify this object in URLs. However, this should not be used as a database key to avoid collisions when an application is switched to a different backend server; use the M<id> property instead.",
               "name" : "urlId",
               "type" : "string"
            },
            {
               "docString" : "The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
               "name" : "permalinkUrl",
               "type" : "string"
            },
            {
               "docString" : "The user who created the selected asset.",
               "name" : "author",
               "type" : "User"
            },
            {
               "docString" : "The time at which the asset was created, as an L<http://www.ietf.org/rfc/rfc3339.txt|RFC3339> timestamp.",
               "name" : "published",
               "type" : "string"
            },
            {
               "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
               "name" : "content",
               "type" : "string"
            },
            {
               "docString" : "The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
               "name" : "renderedContent",
               "type" : "string"
            },
            {
               "docString" : "A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
               "name" : "excerpt",
               "type" : "string"
            },
            {
               "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
               "name" : "textFormat",
               "type" : "string"
            },
            {
               "docString" : "An array of strings containing the M<id> URIs of the groups that this asset is mapped into, if any. At present an asset can only be added to one group, but this may change in future.",
               "name" : "groups",
               "type" : "array<string>"
            },
            {
               "docString" : "An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
               "name" : "source",
               "type" : "AssetSource"
            },
            {
               "docString" : "T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
               "name" : "objectTypes",
               "type" : "set<string>"
            },
            {
               "docString" : "The keyword identifying the type of asset this is.",
               "name" : "objectType",
               "type" : "string"
            },
            {
               "docString" : "C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
               "name" : "isFavoriteForCurrentUser",
               "type" : "boolean"
            },
            {
               "docString" : "The number of distinct users who have added this asset as a favorite.",
               "name" : "favoriteCount",
               "type" : "integer"
            },
            {
               "docString" : "The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
               "name" : "commentCount",
               "type" : "integer"
            },
            {
               "docString" : "The title of the asset.",
               "name" : "title",
               "type" : "string"
            },
            {
               "docString" : "The description of the asset.",
               "name" : "description",
               "type" : "string"
            },
            {
               "docString" : "An object describing the group or blog to which this asset belongs.",
               "name" : "container",
               "type" : "ContainerRef"
            }
         ]
      },
      {
         "name" : "CommentPreview",
         "parentType" : "Asset",
         "properties" : [
            {
               "docString" : "A reference to the asset that this comment is in reply to.",
               "name" : "inReplyTo",
               "type" : "AssetRef"
            },
            {
               "docString" : "T<Editable> An object describing the visibility status and publication date for this page. Only visibility status is editable.",
               "name" : "publicationStatus",
               "type" : "PublicationStatus"
            },
            {
               "docString" : "A URI that serves as a globally unique identifier for the user.",
               "name" : "id",
               "type" : "string"
            },
            {
               "docString" : "A string containing the canonical identifier that can be used to identify this object in URLs. However, this should not be used as a database key to avoid collisions when an application is switched to a different backend server; use the M<id> property instead.",
               "name" : "urlId",
               "type" : "string"
            },
            {
               "docString" : "The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
               "name" : "permalinkUrl",
               "type" : "string"
            },
            {
               "docString" : "The user who created the selected asset.",
               "name" : "author",
               "type" : "User"
            },
            {
               "docString" : "The time at which the asset was created, as an L<http://www.ietf.org/rfc/rfc3339.txt|RFC3339> timestamp.",
               "name" : "published",
               "type" : "string"
            },
            {
               "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
               "name" : "content",
               "type" : "string"
            },
            {
               "docString" : "The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
               "name" : "renderedContent",
               "type" : "string"
            },
            {
               "docString" : "A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
               "name" : "excerpt",
               "type" : "string"
            },
            {
               "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
               "name" : "textFormat",
               "type" : "string"
            },
            {
               "docString" : "An array of strings containing the M<id> URIs of the groups that this asset is mapped into, if any. At present an asset can only be added to one group, but this may change in future.",
               "name" : "groups",
               "type" : "array<string>"
            },
            {
               "docString" : "An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
               "name" : "source",
               "type" : "AssetSource"
            },
            {
               "docString" : "T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
               "name" : "objectTypes",
               "type" : "set<string>"
            },
            {
               "docString" : "The keyword identifying the type of asset this is.",
               "name" : "objectType",
               "type" : "string"
            },
            {
               "docString" : "C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
               "name" : "isFavoriteForCurrentUser",
               "type" : "boolean"
            },
            {
               "docString" : "The number of distinct users who have added this asset as a favorite.",
               "name" : "favoriteCount",
               "type" : "integer"
            },
            {
               "docString" : "The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
               "name" : "commentCount",
               "type" : "integer"
            },
            {
               "docString" : "The title of the asset.",
               "name" : "title",
               "type" : "string"
            },
            {
               "docString" : "The description of the asset.",
               "name" : "description",
               "type" : "string"
            },
            {
               "docString" : "An object describing the group or blog to which this asset belongs.",
               "name" : "container",
               "type" : "ContainerRef"
            }
         ]
      },
      {
         "name" : "CommentTreeItem",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "The comment asset at this point in the tree.",
               "name" : "comment",
               "type" : "Asset"
            },
            {
               "docString" : "The number of levels deep this comment is in the tree. A comment that is directly in reply to the root asset is 1 level deep. If a given comment has a depth of 1, all of the direct replies to that comment will have a depth of 2; their replies will have depth 3, and so forth.",
               "name" : "depth",
               "type" : "integer"
            }
         ]
      },
      {
         "name" : "ContainerRef",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "A URI that serves as a globally unique identifier for the asset. This matches the M<id> property of the referenced blog or group.",
               "name" : "id",
               "type" : "string"
            },
            {
               "docString" : "The display name of the blog or group, as set by its owner.",
               "name" : "displayName",
               "type" : "string"
            },
            {
               "docString" : "A string containing the canonical identifier that can be used to identify this object in URLs. However, this should not be used as a database key to avoid collisions when an application is switched to a different backend server such as the development server; use the M<id> property instead. This matches the M<urlId> property of the referenced blog or group.",
               "name" : "urlId",
               "type" : "string"
            },
            {
               "docString" : "The keyword identifying the type of object the referenced container is.",
               "name" : "objectType",
               "type" : "string"
            },
            {
               "docString" : "The URL of the home page of the referenced blog or group.",
               "name" : "homeUrl",
               "type" : "string"
            }
         ]
      },
      {
         "name" : "Endpoint",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "The name of the noun, as it appears in URLs.",
               "name" : "name",
               "type" : "string"
            },
            {
               "docString" : "A mapping of the HTTP methods that this endpoint accepts to the docstrings describing the result of each method.",
               "name" : "supportedMethods",
               "type" : "map<string>"
            },
            {
               "docString" : "The names of the query string arguments that this endpoint accepts.",
               "name" : "supportedQueryArguments",
               "type" : "set<string>"
            },
            {
               "docString" : "C<true> if this endpoint requires a format suffix, or C<false> otherwise.",
               "name" : "formatSensitive",
               "type" : "boolean"
            },
            {
               "docString" : "For noun endpoints, an array of property endpoints that it supports.",
               "name" : "propertyEndpoints",
               "type" : "array<Endpoint>"
            },
            {
               "docString" : "For noun endpoints, an array of action endpoints that it supports.",
               "name" : "actionEndpoints",
               "type" : "array<Endpoint>"
            },
            {
               "docString" : "For noun endpoints, C<true> if an id part is accepted, or C<false> if the noun may only be used alone.",
               "name" : "canHaveId",
               "type" : "boolean"
            },
            {
               "docString" : "For noun endpoints, C<true> if the id part can be ommitted, or C<false> if it is always required.",
               "name" : "canOmitId",
               "type" : "boolean"
            },
            {
               "docString" : "For filter endpoints, C<true> if a parameter is required on the filter, or C<false> if it's a boolean filter.",
               "name" : "parameterized",
               "type" : "boolean"
            },
            {
               "docString" : "For endpoints that return lists, an array of filters that can be appended to the endpoint.",
               "name" : "filterEndpoints",
               "type" : "array<Endpoint>"
            },
            {
               "docString" : "The type of object that this endpoint represents for C<GET>, C<PUT> and C<DELETE> operations. This property is omitted for action endpoints, as they do not represent resources.",
               "name" : "resourceObjectType",
               "type" : "ObjectType"
            },
            {
               "docString" : "The type of object that this endpoint accepts for C<POST> operations. This property is omitted if this endpoint does not accept C<POST> requests.",
               "name" : "postObjectType",
               "type" : "ObjectType"
            },
            {
               "docString" : "For action endpoints, the type of object that this endpoint returns on success. If the endpoint returns no payload on success, or if this is not an action endpoint, this property is omitted.",
               "name" : "responseObjectType",
               "type" : "ObjectType"
            }
         ]
      },
      {
         "name" : "Entity",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "A URI that serves as a globally unique identifier for the object. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
               "name" : "id",
               "type" : "string"
            },
            {
               "docString" : "A string containing the canonical identifier that can be used to identify this object in URLs. However, this should not be used as a database key to avoid collisions when an application is switched to a different backend server; use the C<id> property instead.",
               "name" : "urlId",
               "type" : "string"
            }
         ]
      },
      {
         "name" : "Event",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "A URI that serves as a globally unique identifier for the user. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
               "name" : "id",
               "type" : "string"
            },
            {
               "docString" : "A string containing the canonical identifier that can be used to identify this object in URLs. However, this should not be used as a database key to avoid collisions when an application is switched to a different backend server; use the M<id> property instead.",
               "name" : "urlId",
               "type" : "string"
            },
            {
               "docString" : "A keyword identifying the type of event this is.",
               "name" : "verb",
               "type" : "set<string>"
            },
            {
               "docString" : "T<Deprecated> An array of verb identifier URIs. This set will contain one verb identifier URI.",
               "name" : "verbs",
               "type" : "set<string>"
            },
            {
               "docString" : "The user who performed the action described by this event.",
               "name" : "actor",
               "type" : "Entity"
            },
            {
               "docString" : "The object to which the action described by this event was performed.",
               "name" : "object",
               "type" : "Base"
            }
         ]
      },
      {
         "name" : "ExternalFeedSubscription",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "A string containing the canonical identifier that can be used to identify this object in URLs.",
               "name" : "urlId",
               "type" : "string"
            },
            {
               "docString" : "The URL to which to send notifications of new items in this subscription's feeds.",
               "name" : "callbackUrl",
               "type" : "string"
            },
            {
               "docString" : "TODO",
               "name" : "callbackStatus",
               "type" : "string"
            },
            {
               "docString" : "A list of rules for filtering notifications to this subscription. Each rule is an asset search query string as used with L<http://www.typepad.com/services/apidocs/endpoints/assets#full-text_search|the assets endpoint>. An item will be delivered to the M<callbackUrl> if it matches any one of these query strings.",
               "name" : "filterRules",
               "type" : "array<string>"
            }
         ]
      },
      {
         "name" : "Favorite",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "A URI that serves as a globally unique identifier for the favorite. This can be used to recognise where the same favorite is returned in response to different requests, and as a mapping key for an application's local data store.",
               "name" : "id",
               "type" : "string"
            },
            {
               "docString" : "A string containing the canonical identifier that can be used to identify this favorite in URLs. However, this should not be used as a database key to avoid collisions when an application is switched to a different backend server such as the development server; use the M<id> property instead.",
               "name" : "urlId",
               "type" : "string"
            },
            {
               "docString" : "The user who saved this favorite. That is, this property is the user who saved the target asset as a favorite, not the creator of that asset.",
               "name" : "author",
               "type" : "User"
            },
            {
               "docString" : "A reference to the target asset that has been marked as a favorite.",
               "name" : "inReplyTo",
               "type" : "AssetRef"
            },
            {
               "docString" : "The time that the favorite was created, as an RFC3339 timestamp.",
               "name" : "published",
               "type" : "string"
            }
         ]
      },
      {
         "name" : "FeedbackStatus",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "C<true> if new comments may be posted to the related asset, or C<false> if no new comments are accepted.",
               "name" : "allowComments",
               "type" : "boolean"
            },
            {
               "docString" : "C<true> if comments should be displayed on the related asset's permalink page, or C<false> if they should be hidden.",
               "name" : "showComments",
               "type" : "boolean"
            },
            {
               "docString" : "C<true> if new trackback pings may be posted to the related asset, or C<false> if no new pings are accepted.",
               "name" : "allowTrackback",
               "type" : "boolean"
            }
         ]
      },
      {
         "name" : "Group",
         "parentType" : "Entity",
         "properties" : [
            {
               "docString" : "The display name set by the group's owner.",
               "name" : "displayName",
               "type" : "string"
            },
            {
               "docString" : "A tagline describing the group, as set by the group's owner.",
               "name" : "tagline",
               "type" : "string"
            },
            {
               "docString" : "T<Deprecated> An array of object type identifier URIs.",
               "name" : "objectTypes",
               "type" : "set<string>"
            },
            {
               "docString" : "A keyword describing the type of this object. For a group object, M<objectType> will be C<Group>.",
               "name" : "objectType",
               "type" : "string"
            },
            {
               "docString" : "A link to an image representing this group.",
               "name" : "avatarLink",
               "type" : "ImageLink"
            },
            {
               "docString" : "The URL to the front page of the group website.",
               "name" : "siteUrl",
               "type" : "string"
            },
            {
               "docString" : "A URI that serves as a globally unique identifier for the object. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
               "name" : "id",
               "type" : "string"
            },
            {
               "docString" : "A string containing the canonical identifier that can be used to identify this object in URLs. However, this should not be used as a database key to avoid collisions when an application is switched to a different backend server; use the C<id> property instead.",
               "name" : "urlId",
               "type" : "string"
            }
         ]
      },
      {
         "name" : "ImageLink",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "The URL for the original, full size version of the image.",
               "name" : "url",
               "type" : "string"
            },
            {
               "docString" : "An URL template with which to build alternate sizes of this image. If present, replace the placeholder string C<{spec}> with a valid sizing specifier to generate the URL for an alternate version of this image. This property is omitted if TypePad is unable to provide a scaled version of this image (for example, if the image isn't hosted on TypePad).",
               "name" : "urlTemplate",
               "type" : "string"
            },
            {
               "docString" : "The width of the original image in pixels. If the width of the image is not available (for example, if the image isn't hosted on TypePad), this property will be omitted.",
               "name" : "width",
               "type" : "integer"
            },
            {
               "docString" : "The height of the original image in pixels. If the height of the image is not available (for example, if the image isn't hosted on TypePad), this property will be omitted.",
               "name" : "height",
               "type" : "integer"
            }
         ]
      },
      {
         "name" : "Link",
         "parentType" : "Asset",
         "properties" : [
            {
               "docString" : "The URL that is the target of this link.",
               "name" : "targetUrl",
               "type" : "string"
            },
            {
               "docString" : "A URI that serves as a globally unique identifier for the user.",
               "name" : "id",
               "type" : "string"
            },
            {
               "docString" : "A string containing the canonical identifier that can be used to identify this object in URLs. However, this should not be used as a database key to avoid collisions when an application is switched to a different backend server; use the M<id> property instead.",
               "name" : "urlId",
               "type" : "string"
            },
            {
               "docString" : "The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
               "name" : "permalinkUrl",
               "type" : "string"
            },
            {
               "docString" : "The user who created the selected asset.",
               "name" : "author",
               "type" : "User"
            },
            {
               "docString" : "The time at which the asset was created, as an L<http://www.ietf.org/rfc/rfc3339.txt|RFC3339> timestamp.",
               "name" : "published",
               "type" : "string"
            },
            {
               "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
               "name" : "content",
               "type" : "string"
            },
            {
               "docString" : "The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
               "name" : "renderedContent",
               "type" : "string"
            },
            {
               "docString" : "A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
               "name" : "excerpt",
               "type" : "string"
            },
            {
               "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
               "name" : "textFormat",
               "type" : "string"
            },
            {
               "docString" : "An array of strings containing the M<id> URIs of the groups that this asset is mapped into, if any. At present an asset can only be added to one group, but this may change in future.",
               "name" : "groups",
               "type" : "array<string>"
            },
            {
               "docString" : "An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
               "name" : "source",
               "type" : "AssetSource"
            },
            {
               "docString" : "T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
               "name" : "objectTypes",
               "type" : "set<string>"
            },
            {
               "docString" : "The keyword identifying the type of asset this is.",
               "name" : "objectType",
               "type" : "string"
            },
            {
               "docString" : "C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
               "name" : "isFavoriteForCurrentUser",
               "type" : "boolean"
            },
            {
               "docString" : "The number of distinct users who have added this asset as a favorite.",
               "name" : "favoriteCount",
               "type" : "integer"
            },
            {
               "docString" : "The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
               "name" : "commentCount",
               "type" : "integer"
            },
            {
               "docString" : "The title of the asset.",
               "name" : "title",
               "type" : "string"
            },
            {
               "docString" : "The description of the asset.",
               "name" : "description",
               "type" : "string"
            },
            {
               "docString" : "An object describing the group or blog to which this asset belongs.",
               "name" : "container",
               "type" : "ContainerRef"
            }
         ]
      },
      {
         "name" : "ObjectProperty",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "The name of the property.",
               "name" : "name",
               "type" : "string"
            },
            {
               "docString" : "The name of the type of this property.",
               "name" : "type",
               "type" : "string"
            },
            {
               "docString" : "A human-readable description of this property.",
               "name" : "docString",
               "type" : "string"
            }
         ]
      },
      {
         "name" : "ObjectType",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "The name of this object type. If this is an anonymous type representing the request or response of an action endpoint, this property is omitted.",
               "name" : "name",
               "type" : "string"
            },
            {
               "docString" : "The name of the parent type. This property is omitted if this object type has no parent type.",
               "name" : "parentType",
               "type" : "string"
            },
            {
               "docString" : "The properties belonging to objects of this object type.",
               "name" : "properties",
               "type" : "array<ObjectProperty>"
            }
         ]
      },
      {
         "name" : "Page",
         "parentType" : "Asset",
         "properties" : [
            {
               "docString" : "T<Editable> The base name of the page, used to create the M<permalinkUrl>.",
               "name" : "filename",
               "type" : "string"
            },
            {
               "docString" : "A list of links to the images that are embedded within the content of this page.",
               "name" : "embeddedImageLinks",
               "type" : "array<ImageLink>"
            },
            {
               "docString" : "T<Editable> The title of the page.",
               "name" : "title",
               "type" : "string"
            },
            {
               "docString" : "T<Editable> The description of the page.",
               "name" : "description",
               "type" : "string"
            },
            {
               "docString" : "T<Editable> A keyword that indicates what formatting mode to use for the content of this page. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
               "name" : "textFormat",
               "type" : "string"
            },
            {
               "docString" : "T<Editable> An object describing the draft status and publication date for this page.",
               "name" : "publicationStatus",
               "type" : "PublicationStatus"
            },
            {
               "docString" : "T<Editable> An object describing the comment and trackback behavior for this page.",
               "name" : "feedbackStatus",
               "type" : "FeedbackStatus"
            },
            {
               "docString" : "A URI that serves as a globally unique identifier for the user.",
               "name" : "id",
               "type" : "string"
            },
            {
               "docString" : "A string containing the canonical identifier that can be used to identify this object in URLs. However, this should not be used as a database key to avoid collisions when an application is switched to a different backend server; use the M<id> property instead.",
               "name" : "urlId",
               "type" : "string"
            },
            {
               "docString" : "The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
               "name" : "permalinkUrl",
               "type" : "string"
            },
            {
               "docString" : "The user who created the selected asset.",
               "name" : "author",
               "type" : "User"
            },
            {
               "docString" : "The time at which the asset was created, as an L<http://www.ietf.org/rfc/rfc3339.txt|RFC3339> timestamp.",
               "name" : "published",
               "type" : "string"
            },
            {
               "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
               "name" : "content",
               "type" : "string"
            },
            {
               "docString" : "The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
               "name" : "renderedContent",
               "type" : "string"
            },
            {
               "docString" : "A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
               "name" : "excerpt",
               "type" : "string"
            },
            {
               "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
               "name" : "textFormat",
               "type" : "string"
            },
            {
               "docString" : "An array of strings containing the M<id> URIs of the groups that this asset is mapped into, if any. At present an asset can only be added to one group, but this may change in future.",
               "name" : "groups",
               "type" : "array<string>"
            },
            {
               "docString" : "An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
               "name" : "source",
               "type" : "AssetSource"
            },
            {
               "docString" : "T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
               "name" : "objectTypes",
               "type" : "set<string>"
            },
            {
               "docString" : "The keyword identifying the type of asset this is.",
               "name" : "objectType",
               "type" : "string"
            },
            {
               "docString" : "C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
               "name" : "isFavoriteForCurrentUser",
               "type" : "boolean"
            },
            {
               "docString" : "The number of distinct users who have added this asset as a favorite.",
               "name" : "favoriteCount",
               "type" : "integer"
            },
            {
               "docString" : "The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
               "name" : "commentCount",
               "type" : "integer"
            },
            {
               "docString" : "The title of the asset.",
               "name" : "title",
               "type" : "string"
            },
            {
               "docString" : "The description of the asset.",
               "name" : "description",
               "type" : "string"
            },
            {
               "docString" : "An object describing the group or blog to which this asset belongs.",
               "name" : "container",
               "type" : "ContainerRef"
            }
         ]
      },
      {
         "name" : "Photo",
         "parentType" : "Asset",
         "properties" : [
            {
               "docString" : "A link to the image that is this Photo asset's content.",
               "name" : "imageLink",
               "type" : "ImageLink"
            },
            {
               "docString" : "A URI that serves as a globally unique identifier for the user.",
               "name" : "id",
               "type" : "string"
            },
            {
               "docString" : "A string containing the canonical identifier that can be used to identify this object in URLs. However, this should not be used as a database key to avoid collisions when an application is switched to a different backend server; use the M<id> property instead.",
               "name" : "urlId",
               "type" : "string"
            },
            {
               "docString" : "The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
               "name" : "permalinkUrl",
               "type" : "string"
            },
            {
               "docString" : "The user who created the selected asset.",
               "name" : "author",
               "type" : "User"
            },
            {
               "docString" : "The time at which the asset was created, as an L<http://www.ietf.org/rfc/rfc3339.txt|RFC3339> timestamp.",
               "name" : "published",
               "type" : "string"
            },
            {
               "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
               "name" : "content",
               "type" : "string"
            },
            {
               "docString" : "The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
               "name" : "renderedContent",
               "type" : "string"
            },
            {
               "docString" : "A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
               "name" : "excerpt",
               "type" : "string"
            },
            {
               "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
               "name" : "textFormat",
               "type" : "string"
            },
            {
               "docString" : "An array of strings containing the M<id> URIs of the groups that this asset is mapped into, if any. At present an asset can only be added to one group, but this may change in future.",
               "name" : "groups",
               "type" : "array<string>"
            },
            {
               "docString" : "An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
               "name" : "source",
               "type" : "AssetSource"
            },
            {
               "docString" : "T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
               "name" : "objectTypes",
               "type" : "set<string>"
            },
            {
               "docString" : "The keyword identifying the type of asset this is.",
               "name" : "objectType",
               "type" : "string"
            },
            {
               "docString" : "C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
               "name" : "isFavoriteForCurrentUser",
               "type" : "boolean"
            },
            {
               "docString" : "The number of distinct users who have added this asset as a favorite.",
               "name" : "favoriteCount",
               "type" : "integer"
            },
            {
               "docString" : "The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
               "name" : "commentCount",
               "type" : "integer"
            },
            {
               "docString" : "The title of the asset.",
               "name" : "title",
               "type" : "string"
            },
            {
               "docString" : "The description of the asset.",
               "name" : "description",
               "type" : "string"
            },
            {
               "docString" : "An object describing the group or blog to which this asset belongs.",
               "name" : "container",
               "type" : "ContainerRef"
            }
         ]
      },
      {
         "name" : "Post",
         "parentType" : "Asset",
         "properties" : [
            {
               "docString" : "T<Editable> A list of categories associated with the post.",
               "name" : "categories",
               "type" : "array<string>"
            },
            {
               "docString" : "A list of links to the images that are embedded within the content of this post.",
               "name" : "embeddedImageLinks",
               "type" : "array<ImageLink>"
            },
            {
               "docString" : "A list of links to the videos that are embedded within the content of this post.",
               "name" : "embeddedVideoLinks",
               "type" : "array<VideoLink>"
            },
            {
               "docString" : "A list of links to the audio streams that are embedded within the content of this post.",
               "name" : "embeddedAudioLinks",
               "type" : "array<AudioLink>"
            },
            {
               "docString" : "T<Editable> The title of the post.",
               "name" : "title",
               "type" : "string"
            },
            {
               "docString" : "T<Editable> The description of the post.",
               "name" : "description",
               "type" : "string"
            },
            {
               "docString" : "T<Editable> The base name of the post to use when creating its M<permalinkUrl>.",
               "name" : "filename",
               "type" : "string"
            },
            {
               "docString" : "T<Editable> The raw post content. The M<textFormat> property defines what format this data is in.",
               "name" : "content",
               "type" : "string"
            },
            {
               "docString" : "T<Editable> A keyword that indicates what formatting mode to use for the content of this post. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
               "name" : "textFormat",
               "type" : "string"
            },
            {
               "docString" : "T<Editable> An object describing the draft status and publication date for this post.",
               "name" : "publicationStatus",
               "type" : "PublicationStatus"
            },
            {
               "docString" : "T<Editable> An object describing the comment and trackback behavior for this post.",
               "name" : "feedbackStatus",
               "type" : "FeedbackStatus"
            },
            {
               "docString" : "The number of times this post has been reblogged by other people.",
               "name" : "reblogCount",
               "type" : "integer"
            },
            {
               "docString" : "A reference to a post of which this post is a reblog.",
               "name" : "reblogOf",
               "type" : "AssetRef"
            },
            {
               "docString" : "A URI that serves as a globally unique identifier for the user.",
               "name" : "id",
               "type" : "string"
            },
            {
               "docString" : "A string containing the canonical identifier that can be used to identify this object in URLs. However, this should not be used as a database key to avoid collisions when an application is switched to a different backend server; use the M<id> property instead.",
               "name" : "urlId",
               "type" : "string"
            },
            {
               "docString" : "The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
               "name" : "permalinkUrl",
               "type" : "string"
            },
            {
               "docString" : "The user who created the selected asset.",
               "name" : "author",
               "type" : "User"
            },
            {
               "docString" : "The time at which the asset was created, as an L<http://www.ietf.org/rfc/rfc3339.txt|RFC3339> timestamp.",
               "name" : "published",
               "type" : "string"
            },
            {
               "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
               "name" : "content",
               "type" : "string"
            },
            {
               "docString" : "The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
               "name" : "renderedContent",
               "type" : "string"
            },
            {
               "docString" : "A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
               "name" : "excerpt",
               "type" : "string"
            },
            {
               "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
               "name" : "textFormat",
               "type" : "string"
            },
            {
               "docString" : "An array of strings containing the M<id> URIs of the groups that this asset is mapped into, if any. At present an asset can only be added to one group, but this may change in future.",
               "name" : "groups",
               "type" : "array<string>"
            },
            {
               "docString" : "An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
               "name" : "source",
               "type" : "AssetSource"
            },
            {
               "docString" : "T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
               "name" : "objectTypes",
               "type" : "set<string>"
            },
            {
               "docString" : "The keyword identifying the type of asset this is.",
               "name" : "objectType",
               "type" : "string"
            },
            {
               "docString" : "C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
               "name" : "isFavoriteForCurrentUser",
               "type" : "boolean"
            },
            {
               "docString" : "The number of distinct users who have added this asset as a favorite.",
               "name" : "favoriteCount",
               "type" : "integer"
            },
            {
               "docString" : "The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
               "name" : "commentCount",
               "type" : "integer"
            },
            {
               "docString" : "The title of the asset.",
               "name" : "title",
               "type" : "string"
            },
            {
               "docString" : "The description of the asset.",
               "name" : "description",
               "type" : "string"
            },
            {
               "docString" : "An object describing the group or blog to which this asset belongs.",
               "name" : "container",
               "type" : "ContainerRef"
            }
         ]
      },
      {
         "name" : "PostByEmailAddress",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "A private email address for posting via email.",
               "name" : "emailAddress",
               "type" : "string"
            }
         ]
      },
      {
         "name" : "PublicationStatus",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "The time at which the related asset was (or will be) published, as a W3CDTF timestamp. If the related asset has been scheduled to be posted later, this property's timestamp will be in the future.",
               "name" : "publicationDate",
               "type" : "string"
            },
            {
               "docString" : "C<true> if this asset is private (not yet published), or C<false> if it has been published.",
               "name" : "draft",
               "type" : "boolean"
            }
         ]
      },
      {
         "name" : "Relationship",
         "properties" : [
            {
               "docString" : "A URI that serves as a globally unique identifier for the relationship. This can be used to recognise where the same relationship is returned in response to different requests, and as a mapping key for an application's local data store.",
               "name" : "id",
               "type" : "string"
            },
            {
               "docString" : "A string containing the canonical identifier that can be used to identify this object in URLs. However, this should not be used as a database key to avoid collisions when an application is switched to a different backend server; use the M<id> property instead.",
               "name" : "urlId",
               "type" : "string"
            },
            {
               "docString" : "The source entity of the relationship. The source entity is like the subject or actor of the relationship; for example, when joining a group, the O<User> who joined the group is the source of the membership.",
               "name" : "source",
               "type" : "Entity"
            },
            {
               "docString" : "The target entity of the relationship. The target entity is like the object of the relationship; for example, when following another user, the O<User> who is being followed is the target of the following relationship.",
               "name" : "target",
               "type" : "Entity"
            },
            {
               "docString" : "An object describing all the types of relationship that currently exist between the source and target objects.",
               "name" : "status",
               "type" : "RelationshipStatus"
            }
         ]
      },
      {
         "name" : "RelationshipStatus",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "A list of relationship type URIs describing the types of the related relationship.",
               "name" : "types",
               "type" : "array<string>"
            }
         ]
      },
      {
         "name" : "User",
         "parentType" : "Entity",
         "properties" : [
            {
               "docString" : "The user's chosen display name.",
               "name" : "displayName",
               "type" : "string"
            },
            {
               "docString" : "T<Deprecated> The user's location, as a free-form string provided by them. Use the the M<location> property of the related O<UserProfile> object, which can be retrieved from the N</users/{id}/profile> endpoint.",
               "name" : "location",
               "type" : "string"
            },
            {
               "docString" : "T<Deprecated> A list of interests provided by the user and displayed on the user's profile page. Use the M<interests> property of the O<UserProfile> object, which can be retrieved from the N</users/{id}/profile> endpoint.",
               "name" : "interests",
               "type" : "array<string>"
            },
            {
               "docString" : "The name the user has chosen for use in the URL of their TypePad profile page. This property can be used to select this user in URLs, although it is not a persistent key, as the user can change it at any time.",
               "name" : "preferredUsername",
               "type" : "string"
            },
            {
               "docString" : "A link to an image representing this user.",
               "name" : "avatarLink",
               "type" : "ImageLink"
            },
            {
               "docString" : "The URL of the user's TypePad profile page.",
               "name" : "profilePageUrl",
               "type" : "string"
            },
            {
               "docString" : "T<Deprecated> An array of object type identifier URIs.",
               "name" : "objectTypes",
               "type" : "set<string>"
            },
            {
               "docString" : "The keyword identifying the type of object this is. For a User object, M<objectType> will be C<User>.",
               "name" : "objectType",
               "type" : "string"
            },
            {
               "docString" : "A URI that serves as a globally unique identifier for the object. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.",
               "name" : "id",
               "type" : "string"
            },
            {
               "docString" : "A string containing the canonical identifier that can be used to identify this object in URLs. However, this should not be used as a database key to avoid collisions when an application is switched to a different backend server; use the C<id> property instead.",
               "name" : "urlId",
               "type" : "string"
            }
         ]
      },
      {
         "name" : "UserProfile",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "The user's chosen display name.",
               "name" : "displayName",
               "type" : "string"
            },
            {
               "docString" : "The user's location, as a free-form string they provided.",
               "name" : "location",
               "type" : "string"
            },
            {
               "docString" : "The user's long description or biography, as a free-form string they provided.",
               "name" : "aboutMe",
               "type" : "string"
            },
            {
               "docString" : "A list of interests provided by the user and displayed on their profile page.",
               "name" : "interests",
               "type" : "array<string>"
            },
            {
               "docString" : "The name the user has chosen for use in the URL of their TypePad profile page. This property can be used to select this user in URLs, although it is not a persistent key, as the user can change it at any time.",
               "name" : "preferredUsername",
               "type" : "string"
            },
            {
               "docString" : "A link to an image representing this user.",
               "name" : "avatarLink",
               "type" : "ImageLink"
            },
            {
               "docString" : "The URL of the user's TypePad profile page.",
               "name" : "profilePageUrl",
               "type" : "string"
            },
            {
               "docString" : "The URL of a widget that, when rendered in an C<iframe>, allows viewers to follow this user. Render this widget in an C<iframe> 300 pixels wide and 125 pixels high.",
               "name" : "followFrameContentUrl",
               "type" : "string"
            },
            {
               "docString" : "The URL of a page where this user can edit their profile information. If this is not the authenticated user's UserProfile object, this property is omitted.",
               "name" : "profileEditPageUrl",
               "type" : "string"
            },
            {
               "docString" : "The URL of a page where this user can manage their group memberships. If this is not the authenticated user's UserProfile object, this property is omitted.",
               "name" : "membershipManagementPageUrl",
               "type" : "string"
            },
            {
               "docString" : "The address of the user's homepage, as a URL they provided. This property is omitted if the user has not provided a homepage.",
               "name" : "homepageUrl",
               "type" : "string"
            }
         ]
      },
      {
         "name" : "Video",
         "parentType" : "Asset",
         "properties" : [
            {
               "docString" : "A link to the video that is this Video asset's content.",
               "name" : "videoLink",
               "type" : "VideoLink"
            },
            {
               "docString" : "A link to a preview image or poster frame for this video. This property is omitted if no such image is available.",
               "name" : "previewImageLink",
               "type" : "ImageLink"
            },
            {
               "docString" : "A URI that serves as a globally unique identifier for the user.",
               "name" : "id",
               "type" : "string"
            },
            {
               "docString" : "A string containing the canonical identifier that can be used to identify this object in URLs. However, this should not be used as a database key to avoid collisions when an application is switched to a different backend server; use the M<id> property instead.",
               "name" : "urlId",
               "type" : "string"
            },
            {
               "docString" : "The URL that is this asset's permalink. This will be omitted if the asset does not have a permalink of its own (for example, if it's embedded in another asset) or if TypePad does not know its permalink.",
               "name" : "permalinkUrl",
               "type" : "string"
            },
            {
               "docString" : "The user who created the selected asset.",
               "name" : "author",
               "type" : "User"
            },
            {
               "docString" : "The time at which the asset was created, as an L<http://www.ietf.org/rfc/rfc3339.txt|RFC3339> timestamp.",
               "name" : "published",
               "type" : "string"
            },
            {
               "docString" : "The raw asset content. The M<textFormat> property describes how to format this data. Use this property to set the asset content in write operations. An asset posted in a group may have a M<content> value up to 10,000 bytes long, while a O<Post> asset in a blog may have up to 65,000 bytes of content.",
               "name" : "content",
               "type" : "string"
            },
            {
               "docString" : "The content of this asset rendered to HTML. This is currently available only for O<Post> and O<Page> assets.",
               "name" : "renderedContent",
               "type" : "string"
            },
            {
               "docString" : "A short, plain-text excerpt of the entry content. This is currently available only for O<Post> assets.",
               "name" : "excerpt",
               "type" : "string"
            },
            {
               "docString" : "A keyword that indicates what formatting mode to use for the content of this asset. This can be C<html> for assets the content of which is HTML, C<html_convert_linebreaks> for assets the content of which is HTML but where paragraph tags should be added automatically, or C<markdown> for assets the content of which is Markdown source. Other formatting modes may be added in future. Applications that present assets for editing should use this property to present an appropriate editor.",
               "name" : "textFormat",
               "type" : "string"
            },
            {
               "docString" : "An array of strings containing the M<id> URIs of the groups that this asset is mapped into, if any. At present an asset can only be added to one group, but this may change in future.",
               "name" : "groups",
               "type" : "array<string>"
            },
            {
               "docString" : "An object describing the site from which this asset was retrieved, if the asset was obtained from an external source.",
               "name" : "source",
               "type" : "AssetSource"
            },
            {
               "docString" : "T<Deprecated> An array of object type identifier URIs identifying the type of this asset. Only the one object type URI for the particular type of asset this asset is will be present.",
               "name" : "objectTypes",
               "type" : "set<string>"
            },
            {
               "docString" : "The keyword identifying the type of asset this is.",
               "name" : "objectType",
               "type" : "string"
            },
            {
               "docString" : "C<true> if this asset is a favorite for the currently authenticated user, or C<false> otherwise. This property is omitted from responses to anonymous requests.",
               "name" : "isFavoriteForCurrentUser",
               "type" : "boolean"
            },
            {
               "docString" : "The number of distinct users who have added this asset as a favorite.",
               "name" : "favoriteCount",
               "type" : "integer"
            },
            {
               "docString" : "The number of comments that have been posted in reply to this asset. This number includes comments that have been posted in response to other comments.",
               "name" : "commentCount",
               "type" : "integer"
            },
            {
               "docString" : "The title of the asset.",
               "name" : "title",
               "type" : "string"
            },
            {
               "docString" : "The description of the asset.",
               "name" : "description",
               "type" : "string"
            },
            {
               "docString" : "An object describing the group or blog to which this asset belongs.",
               "name" : "container",
               "type" : "ContainerRef"
            }
         ]
      },
      {
         "name" : "VideoLink",
         "parentType" : "Base",
         "properties" : [
            {
               "docString" : "An opaque HTML fragment that, when embedded in a HTML page, provides an inline player for the video.",
               "name" : "embedCode",
               "type" : "string"
            }
         ]
      }
   ],
   "totalResults" : 39
}
